{
    "added": "2015-07-22T20:49:43.071",
    "category": "PyOhio 2015",
    "copyright_text": "CC BY",
    "description": "Cross-Origin Resource Sharing is the bane of Javascript API clients existence. It is possible to easily implement CORS support in your Python server code with just a few simple request headers. Once your API is talking CORS, you are free from the tyranny of browsers' same-origin security policies. This talk will explain what CORS is, why should care, and work through an example using web.py.",
    "duration": 2746,
    "embed": "",
    "id": 3704,
    "language": "English",
    "quality_notes": "",
    "recorded": "2015-08-02",
    "related_urls": [],
    "slug": "making-sense-of-cors-using-webpy",
    "source_url": "http://youtu.be/gZelOtYjYv8",
    "speakers": [
        "Zach Wick"
    ],
    "state": 1,
    "summary": "",
    "tags": [
        "talk"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/gZelOtYjYv8/hqdefault.jpg",
    "title": "Making sense of CORS using web.py",
    "updated": "2015-09-16T22:42:03.299",
    "video_flv_download_only": false,
    "video_flv_length": null,
    "video_flv_url": null,
    "video_mp4_download_only": false,
    "video_mp4_length": null,
    "video_mp4_url": "http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pyohio-2015/3704_Making_sense_of_CORS_using_webpy.mp4",
    "video_ogv_download_only": false,
    "video_ogv_length": null,
    "video_ogv_url": null,
    "video_webm_download_only": false,
    "video_webm_length": null,
    "video_webm_url": null,
    "whiteboard": ""
}