{
    "added": "2013-07-04T10:08:43",
    "category": "SciPy 2013",
    "copyright_text": "http://www.youtube.com/t/terms",
    "description": "",
    "duration": null,
    "embed": "<object width=\"640\" height=\"390\"><param name=\"movie\" value=\"http://youtube.com/v/nZKy_nYUxCs?version=3&amp;hl=en_US\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://youtube.com/v/nZKy_nYUxCs?version=3&amp;hl=en_US\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"390\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>",
    "id": 2046,
    "language": "English",
    "quality_notes": "",
    "recorded": "2013-07-01",
    "related_urls": [],
    "slug": "ginga-an-open-source-astronomical-image-viewer-a-1",
    "source_url": "http://www.youtube.com/watch?v=nZKy_nYUxCs",
    "speakers": [],
    "state": 1,
    "status": "published",
    "summary": "Authors: Jeschke, Eric, Subaru Telescope, National Astronomical Observatory of Japan\n\nTrack: Astronomy and Astrophysics\n\nGinga is a new astronomical image viewer written in python. It uses and inter-operates with several key scientific python packages: numpy, pyfits, and scipy. A key differentiator for this image viewer, compared to older-generation FITS viewers, is that all the key components are written as python classes, allowing for the first time a powerful FITS image display widget to be directly embedded in, and tightly coupled with, python code.\n\nWe call Ginga a toolkit for programming FITS viewers because it includes a choice of base classes for programming custom viewers for two different modern widget sets: Gtk and Qt, available on the three common desktop platforms. In addition, a reference viewer is included with the source code based on a plugin architecture in which the viewer can be extended with plugins scripted in python. The code is released under a BSD license similar to other major python packages and is available on github.\n\nGinga has been introduced only recently as a tool to the astronomical community, but since SciPy has a developer focus this talk concentrates on programming with the Ginga toolkit. We cover two cases: using the bare image widget to build custom viewers and writing plugins for the existing full-featured Ginga viewer. The talk may be of interest to anyone developing code in python needing to display scientific image (CCD or CMOS) data and astronomers interested in python-based quick look and analysis tools.",
    "tags": [
        "Tech"
    ],
    "thumbnail_url": "http://i1.ytimg.com/vi/nZKy_nYUxCs/hqdefault.jpg",
    "title": "Ginga: an open-source astronomical image viewer and toolkit; SciPy 2013 Presentation",
    "updated": "2014-04-08T20:28:26.397",
    "video_flv_download_only": false,
    "video_flv_length": null,
    "video_flv_url": null,
    "video_mp4_download_only": false,
    "video_mp4_length": null,
    "video_mp4_url": null,
    "video_ogv_download_only": false,
    "video_ogv_length": null,
    "video_ogv_url": null,
    "video_webm_download_only": false,
    "video_webm_length": null,
    "video_webm_url": null,
    "whiteboard": "needs editing"
}