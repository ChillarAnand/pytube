{"tags": ["performance", "testing"], "thumbnail_url": "http://i.ytimg.com/vi/N2_DvRBokS0/hqdefault.jpg", "embed": "<object width=\"640\" height=\"390\"><param name=\"movie\" value=\"http://youtube.com/v/N2_DvRBokS0?version=3&amp;hl=en_US\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://youtube.com/v/N2_DvRBokS0?version=3&amp;hl=en_US\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"390\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>", "added": "2012-08-19T11:09:25", "whiteboard": "", "video_flv_length": null, "title": "Benchmarking stuff made ridiculously easy (with lots of pictures)", "duration": null, "description": "", "state": 1, "category": "PyCon AU 2011", "video_mp4_download_only": false, "video_flv_download_only": false, "video_mp4_url": "", "video_webm_length": null, "video_mp4_length": null, "recorded": "2011-08-22", "copyright_text": "Creative Commons Attribution license", "source_url": "http://www.youtube.com/watch?v=N2_DvRBokS0", "video_webm_url": "", "summary": "(Mic issues for first ~1:30) Tennessee has been working on a module for\nintegrating cpu time management with unit testing using an easy-to-use\ndecorator. With all the options turned on, this will produce a a performance\nhistory, tracked by revision, integrated with the software used to produce the\nbenchmarking graphs as used on&nbsp_place_holder;http://speed.pypy.org/. You\ntoo can have this kind of shinyness for (almost) free!.\n\n", "video_ogv_url": "", "video_ogv_length": null, "updated": "2014-04-08T20:28:27.669", "id": 994, "related_urls": [], "slug": "benchmarking-stuff-made-ridiculously-easy-with-l", "quality_notes": "", "video_webm_download_only": false, "video_flv_url": "", "language": "English", "video_ogv_download_only": false, "speakers": ["Tennessee J Leeuwenburg"]}