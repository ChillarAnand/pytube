{"tags": [], "thumbnail_url": "https://i.ytimg.com/vi/NknSssmLk4w/hqdefault.jpg", "embed": "<iframe type='text/html' src='http://www.youtube.com/embed/NknSssmLk4w' width='640' height='360' frameborder='0' allowfullscreen='true'/>", "added": "2015-04-16T14:22:07.880", "whiteboard": "needs editing", "video_flv_length": null, "title": "A Winning Strategy with The Weakest Link: how to use weak references to make your code more robust", "duration": null, "description": "Working with weak references should not just be for Python wizards. Whether you have a cache, memoizing a function, tracking objects, or various other bookkeeping needs, you definitely do not want code leaking memory or resources. In this talk, we will look at illuminating examples drawn from a variety of sources on how to use weak references to prevent such bugs.\n\n", "state": 1, "category": "PyCon US 2015", "video_mp4_download_only": false, "video_flv_download_only": false, "video_mp4_url": null, "video_webm_length": null, "video_mp4_length": null, "recorded": "2015-04-12", "copyright_text": "creativeCommon", "source_url": "https://www.youtube.com/watch?v=NknSssmLk4w", "video_webm_url": null, "summary": "", "video_ogv_url": null, "video_ogv_length": null, "updated": "2015-04-16T14:22:07.880", "id": 3437, "related_urls": [], "slug": "a-winning-strategy-with-the-weakest-link-how-to", "quality_notes": "", "video_webm_download_only": false, "video_flv_url": null, "language": "English", "video_ogv_download_only": false, "speakers": ["Jim Baker"]}