{"tags": ["celery", "distributed", "django", "infrastructure", "queueing", "rabbitmq", "real-time", "web"], "thumbnail_url": "http://i.ytimg.com/vi/mAXz2kbh_3U/hqdefault.jpg", "embed": "<object width=\"640\" height=\"390\"><param name=\"movie\" value=\"http://youtube.com/v/mAXz2kbh_3U?version=3&amp;hl=en_US\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://youtube.com/v/mAXz2kbh_3U?version=3&amp;hl=en_US\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"390\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>", "added": "2012-08-30T21:02:35", "whiteboard": "", "video_flv_length": null, "title": "Playing tasks with Django-Celery", "duration": null, "description": "Celery is an open source task queueing system based on distributed message\npassing.\n\nI will talk about the tools that Celery offers for task distribution and how\nto monitor and manage the system using a Django web interface. This talk will\nalso focus on how we use Celery at Jamendo and our real solutions to some\ncommon issues you may encounter when developing a back-office based on Celery.\n\nThe talk will cover the following topics:\n\n  * A brief overview of Celery and the AMPQ protocol AMPQ protocol overview, Celery introduction: Celery, RabbitMQ code examples\n\n  * The impact of Celery on the Jamendo work-flow; examples with real tasks. Here I will talk about the Jamendo back-office infrastructure and some of our common tasks. I will discuss the improvements made by introducing a new back-office system based on Celery. I will show some code snippets and go over some real scenarios.\n\n  * Overview of the Django Celery admin interface and some Jamendo extensions. Let's talk about the Django-Celery interface that allows one to monitor or schedule tasks directly from the Django admin. I will explain which common additional features are necessary and how to add them.\n\n  * Common \"gotchas\" we encountered while working with Celery and how we solved them.\n\n  * Global task locks\n\n  * Centralized logging: be able to read all the logs of all celery workers on different servers and filter them for real-time debugging\n\n", "state": 1, "category": "EuroPython 2011", "video_mp4_download_only": false, "video_flv_download_only": false, "video_mp4_url": null, "video_webm_length": null, "video_mp4_length": null, "recorded": "2011-07-13", "copyright_text": "Standard YouTube License", "source_url": "http://www.youtube.com/watch?v=mAXz2kbh_3U", "video_webm_url": null, "summary": "[EuroPython 2011] Mauro Rocco - 22 June 2011 in \"Track Tagliatelle \"\n\n", "video_ogv_url": null, "video_ogv_length": null, "updated": "2014-04-08T20:28:27.859", "id": 1117, "related_urls": [], "slug": "playing-tasks-with-django-celery-0", "quality_notes": "", "video_webm_download_only": false, "video_flv_url": null, "language": "English", "video_ogv_download_only": false, "speakers": ["Mauro Rocco"]}