{"tags": [], "thumbnail_url": "http://img.youtube.com/vi/y_cXzaymXm0/hqdefault.jpg", "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/y_cXzaymXm0?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/y_cXzaymXm0?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>", "added": "2012-03-12T20:00:32", "whiteboard": "", "video_flv_length": null, "title": "Making Jython Faster and Better", "duration": null, "description": "", "state": 1, "category": "PyCon US 2012", "video_mp4_download_only": false, "video_flv_download_only": false, "video_mp4_url": null, "video_webm_length": null, "video_mp4_length": null, "recorded": "2012-03-10", "copyright_text": "", "source_url": "https://www.youtube.com/watch?v=y_cXzaymXm0", "video_webm_url": null, "summary": "As a dynamic language, Python is difficult to optimize. In addition, these\ndynamic features make using Python code from Java currently too complex.\nHowever, Java 7 adds the invokedynamic bytecode and corresponding library\nsupport, making it possible to finally address these problems in Jython. This\ntalk will describe work in progress to make Jython faster and better\n(improving Java integration).\n\n", "video_ogv_url": null, "video_ogv_length": null, "updated": "2014-04-08T20:28:27.477", "id": 667, "related_urls": [], "slug": "making-jython-faster-and-better", "quality_notes": "", "video_webm_download_only": false, "video_flv_url": null, "language": "English", "video_ogv_download_only": false, "speakers": ["Jim Baker"]}