{"tags": [], "thumbnail_url": "http://img.youtube.com/vi/9G6-GksU7Ko/hqdefault.jpg", "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/9G6-GksU7Ko?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/9G6-GksU7Ko?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>", "added": "2012-03-12T20:00:09", "whiteboard": "", "video_flv_length": null, "title": "Build reliable, traceable, distributed systems with ZeroMQ", "duration": null, "description": "", "state": 1, "category": "PyCon US 2012", "video_mp4_download_only": false, "video_flv_download_only": false, "video_mp4_url": null, "video_webm_length": null, "video_mp4_length": null, "recorded": "2012-03-09", "copyright_text": "", "source_url": "https://www.youtube.com/watch?v=9G6-GksU7Ko", "video_webm_url": null, "summary": "We will show how to build simple yet powerful RPC code with ZeroMQ, with very\nfew (if any!) modification to existing code. We will build fan-in and fan-out\ntopologies with ZeroMQ special socket types to implement PUB/SUB patterns and\nscale up job-processing tasks. Thanks to introspection, the resulting services\nwill be self-documented. Finally, we will show how to implement distributed\ntracing.\n\n", "video_ogv_url": null, "video_ogv_length": null, "updated": "2014-04-08T20:28:27.566", "id": 639, "related_urls": [], "slug": "build-reliable-traceable-distributed-systems-wi", "quality_notes": "", "video_webm_download_only": false, "video_flv_url": null, "language": "English", "video_ogv_download_only": false, "speakers": ["J\u00e9r\u00f4me Petazzoni"]}