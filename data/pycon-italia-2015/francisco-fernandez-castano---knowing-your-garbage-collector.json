{
    "added": "2015-06-14T17:04:26.453",
    "category": "PyCon Italia 2015",
    "copyright_text": "",
    "description": "As Python programmers we\u2019re used to program without taking care about allocating memory for our objects and later on freeing them, Python garbage collector takes care of this task automatically for us.\nGarbage collection is one of the most challenging topics in computer science, there are a lot of research around the topic and different ways to tackle the problem.\nKnowing how our language does this process give us a better understanding of underlying interpreter and allow us to know why problems like cycles can happen in CPython interpreters.\nSo, this talk aims to be and introduction to the topic and a walkaround through different approaches followed in CPython and PyPy:\n\nGenerational Reference counting with cycles detector on CPython.\nIncremental version of the MiniMark GC on PyPy.\n\n",
    "duration": 2110,
    "embed": "",
    "id": 3620,
    "language": "Italian",
    "quality_notes": "",
    "recorded": "2015-05-29",
    "related_urls": [],
    "slug": "knowing-your-garbage-collector",
    "source_url": "https://www.youtube.com/watch?v=MaeS8VI_nvk",
    "speakers": [
        "Francisco Fern\u00e1ndez Casta\u00f1o"
    ],
    "state": 1,
    "status": "published",
    "summary": "",
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/MaeS8VI_nvk/maxresdefault.jpg",
    "title": "Knowing your Garbage collector",
    "updated": "2015-06-14T17:04:26.453",
    "video_flv_download_only": false,
    "video_flv_length": null,
    "video_flv_url": null,
    "video_mp4_download_only": false,
    "video_mp4_length": null,
    "video_mp4_url": null,
    "video_ogv_download_only": false,
    "video_ogv_length": null,
    "video_ogv_url": null,
    "video_webm_download_only": false,
    "video_webm_length": null,
    "video_webm_url": null,
    "whiteboard": ""
}