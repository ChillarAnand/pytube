{"tags": [], "thumbnail_url": "http://i.ytimg.com/vi/xr1b39XMtBQ/hqdefault.jpg", "embed": "<object width=\"640\" height=\"390\"><param name=\"movie\" value=\"http://youtube.com/v/xr1b39XMtBQ?version=3&amp;hl=en_US\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://youtube.com/v/xr1b39XMtBQ?version=3&amp;hl=en_US\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"390\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>", "added": "2015-02-10T18:56:48.858", "whiteboard": "", "video_flv_length": null, "title": "Django+Elasticsearch+Haystack to Search PDFs and Such", "duration": 900, "description": "Have you ever wanted to search the contents of uploaded PDFs, Docs, and other document formats on your website?  Django Haystack (with the Elasticsearch search backend) is a great way to add search to your site, but it does not support full document indexing out of the box.  I'd like to share a solution that I cobbled together to allow this combination of tools the ability to search document contents. ", "state": 1, "category": "ChiPy", "video_mp4_download_only": true, "video_flv_download_only": false, "video_mp4_url": "", "video_webm_length": null, "video_mp4_length": null, "recorded": "2015-02-12", "copyright_text": "CC BY", "source_url": "http://youtu.be/xr1b39XMtBQ", "video_webm_url": "http://s3.us.archive.org/nextdayvideo/DjangoElasticsearchHaystack_to.webm?Signature=VCu0QWgnQkqRJ0k%2BWEzBSpZoqnk%3D&Expires=1423871709&AWSAccessKeyId=FEWGReWX3QbNk0h3", "summary": "", "video_ogv_url": "", "video_ogv_length": null, "updated": "2015-02-13T18:00:40.194", "id": 3377, "related_urls": [], "slug": "djangoelasticsearchhaystack-to-search-pdfs-and", "quality_notes": "", "video_webm_download_only": false, "video_flv_url": "", "language": "English", "video_ogv_download_only": false, "speakers": ["Joe Jasinski"]}