<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>pytube</title><link href="/" rel="alternate"></link><link href="/feeds/pyohio-2011.atom.xml" rel="self"></link><id>/</id><updated>2014-04-08T20:28:00+00:00</updated><entry><title>PyOhio 2011: Aspen: A Next-generation Web Framework</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-aspen-a-next-generation-web-framework.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Chad Whitacre</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-aspen-a-next-generation-web-framework.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/548_pyohio-2011-aspen-a-next-generation-web-framework.m4v"&gt;&lt;img alt="PyOhio 2011: Aspen: A Next-generation Web Framework" src="http://a.images.blip.tv/Pyohio-AspenANextgenerationWebFramework733.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Aspen: A Next-generation Web Framework&lt;/p&gt;
&lt;p&gt;Presented by Chad Whitacre&lt;/p&gt;
&lt;p&gt;Aspen is a Python web framework for both realtime and traditional web apps. It
makes the most of the filesystem to reduce boilerplate and configuration to
near zero. Simplates are the main attraction, a unique approach that brings
logic and presentation as close together as possible--without mixing them.&lt;/p&gt;
&lt;p&gt;[&lt;a class="reference external" href="http://aspen.io/](http://aspen.io/"&gt;http://aspen.io/](http://aspen.io/&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/548_pyohio-2011-aspen-a-next-generation-web-framework.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/548_pyohio-2011-aspen-a-next-generation-web-framework.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: aspen, pyohio, pyohio2011, webframework&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="aspen"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="webframework"></category></entry><entry><title>PyOhio 2011: Bringing Modern Python to the Atari</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-bringing-modern-python-to-the-atari.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Jeffrey Armstrong</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-bringing-modern-python-to-the-atari.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/540_pyohio-2011-bringing-modern-python-to-the-atari.m4v"&gt;&lt;img alt="PyOhio 2011: Bringing Modern Python to the Atari" src="http://a.images.blip.tv/Pyohio-BringingModernPythonToTheAtari253.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Bringing Modern Python to the Atari&lt;/p&gt;
&lt;p&gt;Presented by Jeffrey Armstrong&lt;/p&gt;
&lt;p&gt;The Atari ST continues to fulfill a niche in the computing world amongst
hobbyists. Later Atari computers, such as the TT030 and Falcon030, and the
numerous clones are relatively competent 32-bit machines. To this day, the
open source FreeMiNT operating system continues to be developed, bringing a
UNIX-like environment to these computers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/540_pyohio-2011-bringing-modern-python-to-the-atari.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/540_pyohio-2011-bringing-modern-python-to-the-atari.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: atari, freemint, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="atari"></category><category term="freemint"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: Commercial GUI Development with Python &amp;amp; PySide</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-commercial-gui-development-with-python-pyside.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>James Bonanno</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-commercial-gui-development-with-python-pyside.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/536_pyohio-2011-commercial-gui-development-with-python-amp-pyside.m4v"&gt;&lt;img alt="PyOhio 2011: Commercial GUI Development with Python &amp;amp;amp; PySide" src="http://a.images.blip.tv/Pyohio-CommercialGUIDevelopmentWithPythonPySide484.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Commercial GUI Development with Python and PySide&lt;/p&gt;
&lt;p&gt;Presented by James Bonanno&lt;/p&gt;
&lt;p&gt;Commercial Desktop GUIs need to be secure, flexible, reliable, and easy to
maintain. A rapid application development framework, called PyRad, is
introduced, that uses PySide and Cython. Together with Python, this
development framework has allowed the authors to create numerous GUIs in a
short time period, with a consistent look and feel.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/536_pyohio-2011-commercial-gui-development-with-python-amp-pyside.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/536_pyohio-2011-commercial-gui-development-with-python-amp-pyside.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: cython, gui, pyohio, pyohio2011, pyrad, pyside&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="cython"></category><category term="gui"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="pyrad"></category><category term="pyside"></category></entry><entry><title>PyOhio 2011: Consuming Web APIs with Python</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-consuming-web-apis-with-python.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Issac Kelly</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-consuming-web-apis-with-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/531_pyohio-2011-consuming-web-apis-with-python.m4v"&gt;&lt;img alt="PyOhio 2011: Consuming Web APIs with Python" src="http://a.images.blip.tv/Pyohio-ConsumingWebAPIsWithPython247.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Consuming Web APIs with Python&lt;/p&gt;
&lt;p&gt;Presented by Issac Kelly&lt;/p&gt;
&lt;p&gt;Issac will go over the basics of HTTP apis, what to look for, basic
authorization methods, and how to interface with them in your python scripts.
There will not be cake.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/531_pyohio-2011-consuming-web-apis-with-python.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/531_pyohio-2011-consuming-web-apis-with-python.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: pyohio, pyohio2011, webapis&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="pyohio"></category><category term="pyohio2011"></category><category term="webapis"></category></entry><entry><title>PyOhio 2011: Creating Web APIs that are a joy to use</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-creating-web-apis-that-are-a-joy-to-use.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Issac Kelly</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-creating-web-apis-that-are-a-joy-to-use.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/529_pyohio-2011-creating-web-apis-that-are-a-joy-to-use.m4v"&gt;&lt;img alt="PyOhio 2011: Creating Web APIs that are a joy to use" src="http://a.images.blip.tv/Pyohio-CreatingWebAPIsThatAreAJoyToUse449.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Creating Web APIs that are a joy to use&lt;/p&gt;
&lt;p&gt;Presented by Issac Kelly&lt;/p&gt;
&lt;p&gt;Issac is an avid API consumer. He&amp;amp;aposll cover how to make an API that is not
terrible. This is apparently very difficult to do, and many anti-patterns will
be shown. No care will be taken to protect the guilty. This talk is not as
focused on Python, as it is on creating Web APIs, and an understanding of HTTP
is assumed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/529_pyohio-2011-creating-web-apis-that-are-a-joy-to-use.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/529_pyohio-2011-creating-web-apis-that-are-a-joy-to-use.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: api, http, pyohio, pyohio2011, webapi&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="api"></category><category term="http"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="webapi"></category></entry><entry><title>PyOhio 2011: Data-Transfer Objects Are a Disease. Meet the Cure.</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-data-transfer-objects-are-a-disease-meet-the-cure.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Aaron Oliver</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-data-transfer-objects-are-a-disease-meet-the-cure.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/546_pyohio-2011-data-transfer-objects-are-a-disease-meet-the-cure.m4v"&gt;&lt;img alt="PyOhio 2011: Data-Transfer Objects Are a Disease. Meet the Cure." src="http://a.images.blip.tv/Pyohio-DataTransferObjectsAreADiseaseMeetTheCure992.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Data-Transfer Objects are a Disease. Meet the Cure.&lt;/p&gt;
&lt;p&gt;Presented by Aaron Oliver&lt;/p&gt;
&lt;p&gt;Data Transfer Objects (DTOs) are commonplace. Every time you want to shuffle
data and be object-oriented about it, you crank out a new class. But then
someone extends it for their purposes. Badly. Then someone ELSE extends it
AGAIN and makes thing worse. Learn what makes our brains want to create DTOs,
how they've been (ab)used in the past, and how Python's namedtuple makes it
all better.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/546_pyohio-2011-data-transfer-objects-are-a-disease-meet-the-cure.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/546_pyohio-2011-data-transfer-objects-are-a-disease-meet-the-cure.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: datatransferobjects, namedtuple, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="datatransferobjects"></category><category term="namedtuple"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: Django and Google App Engine: Why I'm using Flask and Amazon EC2</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-django-and-google-app-engine-why-im-using-flask-and-amazon-ec2.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Ben Rousch</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-django-and-google-app-engine-why-im-using-flask-and-amazon-ec2.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/543_pyohio-2011-django-and-google-app-engine-why-i-m-using-flask-and-amazon-ec2.m4v"&gt;&lt;img alt="PyOhio 2011: Django and Google App Engine: Why I'm using Flask and Amazon EC2" src="http://a.images.blip.tv/Pyohio-DjangoAndGoogleAppEngineWhyImUsingFlaskAndAmazonEC2522.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Django and Google App Engine: Why I'm Using Flask and Amazon EC2&lt;/p&gt;
&lt;p&gt;Presented by Ben Rousch&lt;/p&gt;
&lt;p&gt;I'm a lazy coder, but not the good kind of lazy. I dove into Django so I could
have one web framework that would work on many kind of hosting setups and for
any kind of web project. With some modifications, I could even use the laziest
application host, Google App Engine. Some of these decisions didn't work out,
so I'll share some of the lessons I've learned the past year or so.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/543_pyohio-2011-django-and-google-app-engine-why-i-m-using-flask-and-amazon-ec2.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/543_pyohio-2011-django-and-google-app-engine-why-i-m-using-flask-and-amazon-ec2.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: ec2, flask, gae, googleappengine, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="ec2"></category><category term="flask"></category><category term="gae"></category><category term="googleappengine"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: Evolving an internal web service</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-evolving-an-internal-web-service.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Taavi Burns</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-evolving-an-internal-web-service.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/537_pyohio-2011-evolving-an-internal-web-service.m4v"&gt;&lt;img alt="PyOhio 2011: Evolving an internal web service" src="http://a.images.blip.tv/Pyohio-EvolvingAnInternalWebService941.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Evolving an internal web service&lt;/p&gt;
&lt;p&gt;Presented by Taavi Burns&lt;/p&gt;
&lt;p&gt;Over the past few years, FreshBooks' core business logic has been moving into
a Python web-service backend using Pylons and SQLAlchemy. Come hear why we did
it, and stories of its architecture, testing methods, deployment, and
monitoring.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/537_pyohio-2011-evolving-an-internal-web-service.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/537_pyohio-2011-evolving-an-internal-web-service.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: casestudy, freshbooks, pylons, pyohio, pyohio2011, sqlalchemy&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="casestudy"></category><category term="freshbooks"></category><category term="pylons"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="sqlalchemy"></category></entry><entry><title>PyOhio 2011: Exchange Digital Money using Bitcoin</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-exchange-digital-money-using-bitcoin.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>David Steele</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-exchange-digital-money-using-bitcoin.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/533_pyohio-2011-exchange-digital-money-using-bitcoin.m4v"&gt;&lt;img alt="PyOhio 2011: Exchange Digital Money using Bitcoin" src="http://a.images.blip.tv/notfound-episode.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Exchange Digital Money Using Bitcoin&lt;/p&gt;
&lt;p&gt;Presented by David Steele&lt;/p&gt;
&lt;p&gt;Bitcoin is described as the first decentralized digital currency. This talk
describes how Bitcoin uses public key encryption, proof-of-work based logging,
and peer-to-peer technology to create a type of money which can be transferred
over the Internet. We'll cover how to use Python to manage your digital wallet
and participate in this new P2P economy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/533_pyohio-2011-exchange-digital-money-using-bitcoin.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/533_pyohio-2011-exchange-digital-money-using-bitcoin.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: bitcoin, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="bitcoin"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: HTSQL is a WSGI reporting toolkit for Relational Databases</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-htsql-is-a-wsgi-reporting-toolkit-for-relational-databases.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>"Clark C. Evans"</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-htsql-is-a-wsgi-reporting-toolkit-for-relational-databases.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/534_pyohio-2011-htsql-is-a-wsgi-reporting-toolkit-for-relational-databases.m4v"&gt;&lt;img alt="PyOhio 2011: HTSQL is a WSGI reporting toolkit for Relational Databases" src="http://a.images.blip.tv/Pyohio-HTSQLIsAWSGIReportingToolkitForRelationalDatabases585.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;HTSQL is a WSGI reporting toolkit for Relational Databases&lt;/p&gt;
&lt;p&gt;Presented by Clark C. Evans&lt;/p&gt;
&lt;p&gt;HTSQL is a URI-based high-level query language for relational databases; it is
written in the Python language. HTSQL is a wonderful complement existing WSGI-
based applications, making it trivial to create interactive dashboards,
complex reports. We use HTSQL as a REST query interface for data integration
and ad-hoc reporting by technical users or &lt;tt class="docutils literal"&gt;accidental programmers&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/534_pyohio-2011-htsql-is-a-wsgi-reporting-toolkit-for-relational-databases.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/534_pyohio-2011-htsql-is-a-wsgi-reporting-toolkit-for-relational-databases.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: htsql, pyohio, pyohio2011, wsgi&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="htsql"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="wsgi"></category></entry><entry><title>PyOhio 2011: Interactive command-line interpreters with cmd and cmd2</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-interactive-command-line-interpreters-with-cmd-and-cmd2.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Catherine Devlin</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-interactive-command-line-interpreters-with-cmd-and-cmd2.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/541_pyohio-2011-interactive-command-line-interpreters-with-cmd-and-cmd2.m4v"&gt;&lt;img alt="PyOhio 2011: Interactive command-line interpreters with cmd and cmd2" src="http://a.images.blip.tv/Pyohio-InteractiveCommandlineInterpretersWithCmdAndCmd2782.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Interactive command-line interpreters with cmd and cmd2&lt;/p&gt;
&lt;p&gt;Presented by Catherine Devlin&lt;/p&gt;
&lt;p&gt;How should your Python program receive commands and deliver results? If an
interactive command-line interpreter is right for you, you're in luck -
Python's got some great batteries included for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/541_pyohio-2011-interactive-command-line-interpreters-with-cmd-and-cmd2.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/541_pyohio-2011-interactive-command-line-interpreters-with-cmd-and-cmd2.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: cmd, cmd2, commandline, interpreters, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="cmd"></category><category term="cmd2"></category><category term="commandline"></category><category term="interpreters"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: Multi-player Games using Panda3D and Python</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-multi-player-games-using-panda3d-and-python.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Peter Carswell</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-multi-player-games-using-panda3d-and-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/526_pyohio-2011-multi-player-games-using-panda3d-and-python.ogv"&gt;&lt;img alt="PyOhio 2011: Multi-player Games using Panda3D and Python" src="http://a.images.blip.tv/Pyohio-MultiplayerGamesUsingPanda3DAndPython491.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Multi-player Games using Panda3D and Python&lt;/p&gt;
&lt;p&gt;Presented by Peter Carswell&lt;/p&gt;
&lt;p&gt;This two-hour tutorial is designed to investigate the implementation of a
multi-player game using the game engine Panda3D. Panda3D's intended game-
development language is Python. The concepts involve Object Oriented
Programming structures, modeling and texture mapping, key-binding motion,
collisions and, finally, networking techniques.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/526_pyohio-2011-multi-player-games-using-panda3d-and-python.ogv"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/526_pyohio-2011-multi-player-games-using-panda3d-and-python.ogv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: panda3d, pyohio, pyohio2011, tutorial&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="panda3d"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="tutorial"></category></entry><entry><title>PyOhio 2011: Names, Objects, and Plummeting From The Cliff</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-names-objects-and-plummeting-from-the-cliff.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-names-objects-and-plummeting-from-the-cliff.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/542_pyohio-2011-names-objects-and-plummeting-from-the-cliff.m4v"&gt;&lt;img alt="PyOhio 2011: Names, Objects, and Plummeting From The Cliff" src="http://a.images.blip.tv/Pyohio-NamesObjectsAndPlummetingFromTheCliff414.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Names, Objects, and Plummeting From The Cliff&lt;/p&gt;
&lt;p&gt;Presented by Brandon Craig Rhodes&lt;/p&gt;
&lt;p&gt;The assignment statement is often the second thing a new Python programmer
learns, right after the &amp;quot;print&amp;quot; statement - but the beginner can get seriously
bogged down in all of the concepts that assignment involves! Using a simple
analogy, this talk will tackle those issues head-on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/542_pyohio-2011-names-objects-and-plummeting-from-the-cliff.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/542_pyohio-2011-names-objects-and-plummeting-from-the-cliff.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: assignment, learningpython, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="assignment"></category><category term="learningpython"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: PHP to Python with No Regrets</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-php-to-python-with-no-regrets.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Alex Ezell</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-php-to-python-with-no-regrets.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/544_pyohio-2011-php-to-python-with-no-regrets.m4v"&gt;&lt;img alt="PyOhio 2011: PHP to Python with No Regrets" src="http://a.images.blip.tv/Pyohio-PHPToPythonWithNoRegrets504.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;PHP to Python with No Regrets&lt;/p&gt;
&lt;p&gt;Presented by Alex Ezell&lt;/p&gt;
&lt;p&gt;At Emma, we are transforming an eight year old PHP codebase into an API-driven
service written in Python. Facing down the triple threat of bad data, encoding
issues, and a generation of code cruft, we've begun to see the light of day.
Come hear how we did it, where we fell down and where we're succeeding.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/544_pyohio-2011-php-to-python-with-no-regrets.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/544_pyohio-2011-php-to-python-with-no-regrets.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: casestudy, conversion, php, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="casestudy"></category><category term="conversion"></category><category term="php"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: Procedures, Objects, Reusability: &amp;quot;httplib&amp;quot;, &amp;quot;urllib2&amp;quot;, and Their Discontents</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-procedures-objects-reusability-httplib-urllib2-and-their-discontents.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-procedures-objects-reusability-httplib-urllib2-and-their-discontents.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/521_pyohio-2011-procedures-objects-reusability-quot-httplib-quot-quot-urllib2-quot-and-their-discontents.m4v"&gt;&lt;img alt="PyOhio 2011: Procedures, Objects, Reusability: &amp;amp;quot;httplib&amp;amp;quot;, &amp;amp;quot;urllib2&amp;amp;quot;, and Their Discontents" src="http://a.images.blip.tv/Pyohio-ProceduresObjectsReusabilityHttplibUrllib2AndTheirDiscont815.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Procedures, Objects, Reusability: httplib, urllib2 and their discontents&lt;/p&gt;
&lt;p&gt;Presented by Brandon Craig Rhodes&lt;/p&gt;
&lt;p&gt;Python supports two major programming paradigms: procedures, and object
orientation. This talk will claim that, when it comes to code re-use, these
two paradigms are NOT created equal: because object-oriented programming
encourages the programmer to write methods that consider everything else
inside of &amp;quot;self&amp;quot; to be fair game, it encourages highly coupled code that
proves brittle when extended.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/521_pyohio-2011-procedures-objects-reusability-quot-httplib-quot-quot-urllib2-quot-and-their-discontents.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/521_pyohio-2011-procedures-objects-reusability-quot-httplib-quot-quot-urllib2-quot-and-their-discontents.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: codereuse, httplib, oop, programming, pyohio, pyohio2011, reuse, self, urllib2&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="codereuse"></category><category term="httplib"></category><category term="oop"></category><category term="programming"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="reuse"></category><category term="self"></category><category term="urllib2"></category></entry><entry><title>PyOhio 2011: Python 101</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-python-101.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Michael Yanovich</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-python-101.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/527_pyohio-2011-python-101.m4v"&gt;&lt;img alt="PyOhio 2011: Python 101" src="http://a.images.blip.tv/Pyohio-Python101773.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Python 101&lt;/p&gt;
&lt;p&gt;Presented by Michael Yanovich&lt;/p&gt;
&lt;p&gt;Are you completely new to Python? Have you been wanting to learn Python but
haven't had the time? Well give you a crash course on the basics of Python.
We'll start off with why Python is unique compared to other languages and then
quickly start into basic syntax, data types, and the Python philosophy for
coding.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: The presenter dropped the mic on the ground and there it
lay. So the sound kind of sucks.]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/527_pyohio-2011-python-101.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/527_pyohio-2011-python-101.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: learningpython, pyohio, pyohio2011, tutorial&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="learningpython"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="tutorial"></category></entry><entry><title>PyOhio 2011: Python 102</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-python-102.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Michael Yanovich</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-python-102.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://blip.tv/file/get/Pyohio-Python102691.ogv"&gt;&lt;img alt="PyOhio 2011: Python 102" src="http://a.images.blip.tv/notfound-episode.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Python 102&lt;/p&gt;
&lt;p&gt;Presented by Michael Yanovich&lt;/p&gt;
&lt;p&gt;Now you know the basics of Python. What can you do with Python? Well the
better question should be &amp;quot;What can't you do with Python?&amp;quot; In this
tutorial/talk we'll cover more advance topics that include how to use the
Python Standard Library, advance data type manipulation, and basic network
programming. This class will be more like a talk depending on the
comfortability of everyone in the class.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://blip.tv/file/get/Pyohio-Python102691.ogv"&gt;http://blip.tv/file/get/Pyohio-Python102691.ogv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: pyohio, pyohio2011, tutorial&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="pyohio"></category><category term="pyohio2011"></category><category term="tutorial"></category></entry><entry><title>PyOhio 2011: Python and Entrepreneurship</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-python-and-entrepreneurship.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Unknown</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-python-and-entrepreneurship.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/535_pyohio-2011-python-and-entrepreneurship.m4v"&gt;&lt;img alt="PyOhio 2011: Python and Entrepreneurship" src="http://a.images.blip.tv/Pyohio-PythonAndEntrepreneurship632.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Python and Entrepeneurship&lt;/p&gt;
&lt;p&gt;Panel: Eric Floehr, Matt Wilson, Isaac, Kelly, Carl Karsten&lt;/p&gt;
&lt;p&gt;This will be an audience-led discussion with a number of Midwest entrepreneurs
who do Python consulting, sell products built on Python, or who use Python as
an integral part of their business operations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/535_pyohio-2011-python-and-entrepreneurship.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/535_pyohio-2011-python-and-entrepreneurship.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: casestudy, entrepeneurship, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="casestudy"></category><category term="entrepeneurship"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: Python, Parsing and You</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-python-parsing-and-you.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Tim Henderson</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-python-parsing-and-you.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/530_pyohio-2011-python-parsing-and-you.m4v"&gt;&lt;img alt="PyOhio 2011: Python, Parsing and You" src="http://a.images.blip.tv/notfound-episode.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Python, Parsing, and You&lt;/p&gt;
&lt;p&gt;Presented by Tim Henderson&lt;/p&gt;
&lt;p&gt;Tim Henderson Python is a fantastic language to write text processing tools
in, including full fledged parsers. In this tutorial I will briefly cover
Recursive Descent, Top Down Predictive and LALR Parsing. The tools used will
include PLY and a Top Down Predictive Parsing framework of my own
construction. I will expect the audience to be familiar with the following
concepts: Context Free Grammars, Regular Expressions, ...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/530_pyohio-2011-python-parsing-and-you.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/530_pyohio-2011-python-parsing-and-you.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: lalr, parser, ply, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="lalr"></category><category term="parser"></category><category term="ply"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: Saturday Lightning Talks</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-saturday-lightning-talks.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Unknown</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-saturday-lightning-talks.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/523_pyohio-2011-saturday-lightning-talks.m4v"&gt;&lt;img alt="PyOhio 2011: Saturday Lightning Talks" src="http://a.images.blip.tv/Pyohio-SaturdayLightningTalks453.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Saturday Lightning Talks&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 Dave something - SourceForge doing cool stuff with Python [sourceforge.net](&lt;a class="reference external" href="http://sourceforge.net/"&gt;http://sourceforge.net/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;05:00 Rick Harding - Bookie [github.com/mitechie/Bookie](&lt;a class="reference external" href="http://github.com/mitechie/Bookie"&gt;http://github.com/mitechie/Bookie&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;09:55 Tim Henderson - Slang [github.com/timtadh/slang](&lt;a class="reference external" href="http://github.com/timtadh/slang"&gt;http://github.com/timtadh/slang&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;12:30 Raymond Chandler III - Sun Tsu and Python -- adopting Python in the work place&lt;/li&gt;
&lt;li&gt;17:39 Michael Yanovich - Pelican [github.com/ametaireau/pelican](&lt;a class="reference external" href="http://github.com/ametaireau/pelican"&gt;http://github.com/ametaireau/pelican&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;21:50 Matt Wilson - Rattlesnake [github.com/mw44118/rattlesnake](&lt;a class="reference external" href="http://github.com/mw44118/rattlesnake"&gt;http://github.com/mw44118/rattlesnake&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;27:55 Kris Hardy - repoze.who.plugins&lt;/li&gt;
&lt;li&gt;33:20 Dave M - What laptop did you bring to PyOhio?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/523_pyohio-2011-saturday-lightning-talks.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/523_pyohio-2011-saturday-lightning-talks.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: bookie, laptops, pelican, pyohio, pyohio2011, rattlesnake, repozewhoplugins, slang, sourceforge&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="bookie"></category><category term="laptops"></category><category term="pelican"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="rattlesnake"></category><category term="repozewhoplugins"></category><category term="slang"></category><category term="sourceforge"></category></entry><entry><title>PyOhio 2011: Soft Skillz: They aren't just for humans anymore</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-soft-skillz-they-arent-just-for-humans-anymore.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>"Brian H. Prince"</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-soft-skillz-they-arent-just-for-humans-anymore.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/532_pyohio-2011-soft-skillz-they-aren-t-just-for-humans-anymore.m4v"&gt;&lt;img alt="PyOhio 2011: Soft Skillz: They aren't just for humans anymore" src="http://a.images.blip.tv/Pyohio-SoftSkillzTheyArentJustForHumansAnymore503.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Soft Skillz: They aren't just for humans anymore&lt;/p&gt;
&lt;p&gt;Presented by Brian H. Prince&lt;/p&gt;
&lt;p&gt;Brian looks back at 15 years of being a developer, consultant, and business
leader. He will talk about the skills and wisdom that you need to be happy and
successful in your career.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/532_pyohio-2011-soft-skillz-they-aren-t-just-for-humans-anymore.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/532_pyohio-2011-soft-skillz-they-aren-t-just-for-humans-anymore.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: careers, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="careers"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: SqlAlchemy tutorial</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-sqlalchemy-tutorial.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Rick Harding</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-sqlalchemy-tutorial.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/525_pyohio-2011-sqlalchemy-tutorial.ogv"&gt;&lt;img alt="PyOhio 2011: SqlAlchemy tutorial" src="http://a.images.blip.tv/Pyohio-SqlAlchemyTutorial951.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;SqlAlchemy tutorial&lt;/p&gt;
&lt;p&gt;Presented by Rick Harding&lt;/p&gt;
&lt;p&gt;SqlAlchemy is one of the top 5 &amp;quot;must have&amp;quot; modules for Python. We'll go
through why you might want to use an ORM, situations to use the different
layers of SqlAlchemy, and some tips and tricks on a real sample application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/525_pyohio-2011-sqlalchemy-tutorial.ogv"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/525_pyohio-2011-sqlalchemy-tutorial.ogv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: pyohio, pyohio2011, sqlalchemy, tutorial&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="pyohio"></category><category term="pyohio2011"></category><category term="sqlalchemy"></category><category term="tutorial"></category></entry><entry><title>PyOhio 2011: Squinting at Python Objects</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-squinting-at-python-objects.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-squinting-at-python-objects.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/524_pyohio-2011-squinting-at-python-objects.m4v"&gt;&lt;img alt="PyOhio 2011: Squinting at Python Objects" src="http://a.images.blip.tv/Pyohio-SquintingAtPythonObjects698.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Squinting at Python Objects&lt;/p&gt;
&lt;p&gt;Presented by Brandon Craig Rhodes&lt;/p&gt;
&lt;p&gt;Python classes can gain attributes as if by magic. Thanks to properties,
descriptors, and (if all else fails) __getattr__() and __getattribute__(), the
attempt to access obj.something can result in arbitrary code execution. If you
are wondering how your Python program is using memory, this can result in a
problem: each time you look to see if something is there, it &lt;strong&gt;is&lt;/strong&gt;, because
it is pulled in dynamically the moment you look for it. In this talk, you will
learn how to prod Python objects gently, and hopefully learn their secrets -
and their memory usage - without actually invoking code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/524_pyohio-2011-squinting-at-python-objects.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/524_pyohio-2011-squinting-at-python-objects.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: descriptors, getattr, getattribute, optimizing, properties, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="descriptors"></category><category term="getattr"></category><category term="getattribute"></category><category term="optimizing"></category><category term="properties"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: Sunday Lightning Talks</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-sunday-lightning-talks.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Unknown</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-sunday-lightning-talks.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/522_pyohio-2011-sunday-lightning-talks.m4v"&gt;&lt;img alt="PyOhio 2011: Sunday Lightning Talks" src="http://a.images.blip.tv/Pyohio-SundayLightningTalks889.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Sunday Lightning Talks&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 Brandon Craig Rhodes - Adventure [&lt;a class="reference external" href="https://bitbucket.org/brandon/adventure/overview](https://bitbucket.org/brandon/adventure/overview"&gt;https://bitbucket.org/brandon/adventure/overview](https://bitbucket.org/brandon/adventure/overview&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;05:15 Dave M - Followup on the laptop survey&lt;/li&gt;
&lt;li&gt;08:10 Clayton Parker - Vim and ctags&lt;/li&gt;
&lt;li&gt;13:10 Rich Harkins - Bullwinkle - Python tools inspired by Perl::Moose [http://code.google.com/bullwinkle](http://code.google.com/bullwinkle)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/522_pyohio-2011-sunday-lightning-talks.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/522_pyohio-2011-sunday-lightning-talks.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: adventure, bullwinkle, ctags, pyohio, pyohio2011, vim&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="adventure"></category><category term="bullwinkle"></category><category term="ctags"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="vim"></category></entry><entry><title>PyOhio 2011: Toilets and Teleports - A study in Model-View-Control (MVC)</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-toilets-and-teleports-a-study-in-model-view-control-mvc.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Howard Mooneyham</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-toilets-and-teleports-a-study-in-model-view-control-mvc.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/545_pyohio-2011-toilets-and-teleports-a-study-in-model-view-control-mvc.m4v"&gt;&lt;img alt="PyOhio 2011: Toilets and Teleports - A study in Model-View-Control (MVC)" src="http://a.images.blip.tv/Pyohio-ToiletsAndTeleportsAStudyInModelViewControlMVC138.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Toilets and Teleports - A study in Model-View-Control (MVC)&lt;/p&gt;
&lt;p&gt;Presented by Howard Mooneyham&lt;/p&gt;
&lt;p&gt;Have you ever wondered how to create a Model View Control program? Come to my
talk and we will go through building a simple MVC program, Toilets and
Teleports. We will then use one of the benefits of MVC to replace the View
with a production quality version with GUI no other changes. I will pass out
flow charts and documents showing how the program was created.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/545_pyohio-2011-toilets-and-teleports-a-study-in-model-view-control-mvc.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/545_pyohio-2011-toilets-and-teleports-a-study-in-model-view-control-mvc.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: mvc, pyohio, pyohio2011, tutorial&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="mvc"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="tutorial"></category></entry><entry><title>PyOhio 2011: Using Fabric - from a sysadmin's perspective</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-using-fabric-from-a-sysadmins-perspective.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Morgan Goose</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-using-fabric-from-a-sysadmins-perspective.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/547_pyohio-2011-using-fabric-from-a-sysadmin-s-perspective.m4v"&gt;&lt;img alt="PyOhio 2011: Using Fabric - from a sysadmin's perspective" src="http://a.images.blip.tv/Pyohio-UsingFabricFromASysadminsPerspective251.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Using Fabric -- from a sysadmin's perspective&lt;/p&gt;
&lt;p&gt;Presented by Morgan Goose&lt;/p&gt;
&lt;p&gt;Fabric is a great tool written in python for python devs. It allows you to
script remote interactions on a remote server and only requires ssh and a
shell on the remote host. It's commonly pigeonholed into a deployment tool,
but it can but used for more than just websites.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/547_pyohio-2011-using-fabric-from-a-sysadmin-s-perspective.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/547_pyohio-2011-using-fabric-from-a-sysadmin-s-perspective.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: fabric, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="fabric"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry><entry><title>PyOhio 2011: Using pymc to cluster twitter users -- a noob's perspective</title><link href="/pyohio-2011/pyohio-2011-pyohio-2011-using-pymc-to-cluster-twitter-users-a-noobs-perspective.html" rel="alternate"></link><updated>2014-04-08T20:28:00+00:00</updated><author><name>Timmy Wilson</name></author><id>tag:,2012-02-23:pyohio-2011/pyohio-2011-pyohio-2011-using-pymc-to-cluster-twitter-users-a-noobs-perspective.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/539_pyohio-2011-using-pymc-to-cluster-twitter-users-a-noob-s-perspective.m4v"&gt;&lt;img alt="PyOhio 2011: Using pymc to cluster twitter users -- a noob's perspective" src="http://a.images.blip.tv/Pyohio-UsingPymcToClusterTwitterUsersANoobsPerspective618.png" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Using pymc to cluster twitter users -- a noob's perspective&lt;/p&gt;
&lt;p&gt;Presented by Timmy Wilson&lt;/p&gt;
&lt;p&gt;Journey through the thoughts, hopes, and sad frustrations of an average python
developer trying to understand MCMC matrix factorization. I'll work through a
Python implementation of the paper &amp;quot;Bayesian Probabilistic Matrix
Factorization using Markov Chain Monte Carlo&amp;quot; and talk about how it applies to
clustering a Twitter adjacency matrix.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyOhio 2011&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/539_pyohio-2011-using-pymc-to-cluster-twitter-users-a-noob-s-perspective.m4v"&gt;http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/539_pyohio-2011-using-pymc-to-cluster-twitter-users-a-noob-s-perspective.m4v&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tags: pymc, pyohio, pyohio2011&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="pymc"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry></feed>