<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>pytube</title><link href="/" rel="alternate"></link><link href="/feeds/pycon-us-2015.atom.xml" rel="self"></link><id>/</id><updated>2015-04-29T13:48:00+00:00</updated><entry><title>3D Print Anything with the Blender API</title><link href="/pycon-us-2015/pycon-us-2015-3d-print-anything-with-the-blender-api.html" rel="alternate"></link><updated>2015-04-16T16:36:00+00:00</updated><author><name>Jenny Cheng</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-3d-print-anything-with-the-blender-api.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=ikcHP0Hd8Kc"&gt;&lt;img alt="3D Print Anything with the Blender API" src="https://i.ytimg.com/vi/ikcHP0Hd8Kc/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=ikcHP0Hd8Kc"&gt;https://www.youtube.com/watch?v=ikcHP0Hd8Kc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>A Beginner's Guide to Test-driven Development</title><link href="/pycon-us-2015/pycon-us-2015-a-beginners-guide-to-test-driven-development.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Itamar Turner-Trauring</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-a-beginners-guide-to-test-driven-development.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=ePaga05gisk"&gt;&lt;img alt="A Beginner's Guide to Test-driven Development" src="https://i.ytimg.com/vi/ePaga05gisk/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Software is maintained by humans with limited memory and an unfortunate tendency to make mistakes. Test-driven development (TDD) can help you work around these design flaws by providing a permanent, automated specification for your code. Learn how to implement TDD when bug fixing and implementing new features and how this process will ensure your code is correct both now and in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=ePaga05gisk"&gt;https://www.youtube.com/watch?v=ePaga05gisk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>A Winning Strategy with The Weakest Link: how to use weak references to make your code more robust</title><link href="/pycon-us-2015/pycon-us-2015-a-winning-strategy-with-the-weakest-link-how-to-use-weak-references-to-make-your-code-more-robust.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Jim Baker</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-a-winning-strategy-with-the-weakest-link-how-to-use-weak-references-to-make-your-code-more-robust.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=NknSssmLk4w"&gt;&lt;img alt="A Winning Strategy with The Weakest Link: how to use weak references to make your code more robust" src="https://i.ytimg.com/vi/NknSssmLk4w/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Working with weak references should not just be for Python wizards. Whether you have a cache, memoizing a function, tracking objects, or various other bookkeeping needs, you definitely do not want code leaking memory or resources. In this talk, we will look at illuminating examples drawn from a variety of sources on how to use weak references to prevent such bugs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=NknSssmLk4w"&gt;https://www.youtube.com/watch?v=NknSssmLk4w&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Achieving Continuous Delivery: An Automation Story</title><link href="/pycon-us-2015/pycon-us-2015-achieving-continuous-delivery-an-automation-story.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>James Cammarata</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-achieving-continuous-delivery-an-automation-story.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=7tfTR42iNSs"&gt;&lt;img alt="Achieving Continuous Delivery: An Automation Story" src="https://i.ytimg.com/vi/7tfTR42iNSs/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Continuos Deployment is the act of deploying software constantly.  The idea is if &amp;quot;&amp;quot;release early, release often&amp;quot;&amp;quot; is good, releasing very often is better.  It's not trivial.   Automation is part of the battle, and testing is another.   Learn to use tools like Jenkins and Ansible to move from deploying software once a month to 15 times every hour, and why you'll want to.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=7tfTR42iNSs"&gt;https://www.youtube.com/watch?v=7tfTR42iNSs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Advanced Git</title><link href="/pycon-us-2015/pycon-us-2015-advanced-git.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>David Baumgold</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-advanced-git.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=4EOZvow1mk4"&gt;&lt;img alt="Advanced Git" src="https://i.ytimg.com/vi/4EOZvow1mk4/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;You know clone, commit, push, and pull. Now you're ready for the fun stuff. This talk will give you the advanced knowledge you need to take control of your git repository: rebase, cherry-pick, bisect, blame, squashing, and the reflog. You'll also get a better conceptual understanding of how git works, allowing you to chain these tools together to accomplish whatever task you need.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=4EOZvow1mk4"&gt;https://www.youtube.com/watch?v=4EOZvow1mk4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Ansible 101</title><link href="/pycon-us-2015/pycon-us-2015-ansible-101.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Luke Sneeringer</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-ansible-101.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=-i1pZ6vvMX8"&gt;&lt;img alt="Ansible 101" src="https://i.ytimg.com/vi/-i1pZ6vvMX8/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Interested in Ansible, or in server orchestration and configuration generally? This tutorial will teach the basics -- and a few of the not-so-basics -- of orchestrating machines with Ansible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=-i1pZ6vvMX8"&gt;https://www.youtube.com/watch?v=-i1pZ6vvMX8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Ansible beyond YAML</title><link href="/pycon-us-2015/pycon-us-2015-ansible-beyond-yaml.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Michael Scherer</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-ansible-beyond-yaml.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=igJTEugHozM"&gt;&lt;img alt="Ansible beyond YAML" src="https://i.ytimg.com/vi/igJTEugHozM/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Ansible is a configuration management tool whose primary mode of operation involve using YAML to describe deployments and operations. However, it can do much more and be extended using python, which is what we will explore in this talk. Among others, we will see the plugins system for various part of the tool and how to reuse Ansible in a script.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=igJTEugHozM"&gt;https://www.youtube.com/watch?v=igJTEugHozM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Avoiding Burnout, and other essentials of Open Source Self-Care</title><link href="/pycon-us-2015/pycon-us-2015-avoiding-burnout-and-other-essentials-of-open-source-self-care.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Kathleen Danielson</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-avoiding-burnout-and-other-essentials-of-open-source-self-care.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=RbeHBnWfXUc"&gt;&lt;img alt="Avoiding Burnout, and other essentials of Open Source Self-Care" src="https://i.ytimg.com/vi/RbeHBnWfXUc/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;As technical community managers we are faced with a unique set of challenges. We do it because we love our communities, but we also are often guilty of neglecting our own very real needs in order to serve those communities. We end up feeling guilty, run down, inadequate, and ultimately burnt out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=RbeHBnWfXUc"&gt;https://www.youtube.com/watch?v=RbeHBnWfXUc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Bayesian statistics made simple</title><link href="/pycon-us-2015/pycon-us-2015-bayesian-statistics-made-simple.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Allen Downey</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-bayesian-statistics-made-simple.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=5W715nfJNJw"&gt;&lt;img alt="Bayesian statistics made simple" src="https://i.ytimg.com/vi/5W715nfJNJw/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;An introduction to Bayesian statistics using Python. &amp;nbsp;Bayesian statistics are usually presented mathematically, but many of the ideas are easier to understand computationally. &amp;nbsp;People who know Python can get started quickly and use Bayesian analysis to solve real problems. &amp;nbsp;This tutorial is based on material and case studies from Think Bayes (O’Reilly Media).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=5W715nfJNJw"&gt;https://www.youtube.com/watch?v=5W715nfJNJw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Beyond grep: Practical Logging and Metrics</title><link href="/pycon-us-2015/pycon-us-2015-beyond-grep-practical-logging-and-metrics.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Hynek Schlawack</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-beyond-grep-practical-logging-and-metrics.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=gqmAwK0wNyw"&gt;&lt;img alt="Beyond grep: Practical Logging and Metrics" src="https://i.ytimg.com/vi/gqmAwK0wNyw/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Your Python server applications are running but you’re wondering what they are doing?  Your only clue about their current state is the server load?  Let’s have stroll through the landscape of logging and metrics so you’ll find the perfect fit for your use cases!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=gqmAwK0wNyw"&gt;https://www.youtube.com/watch?v=gqmAwK0wNyw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Beyond PEP 8 -- Best practices for beautiful intelligible code</title><link href="/pycon-us-2015/pycon-us-2015-beyond-pep-8-best-practices-for-beautiful-intelligible-code.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Raymond Hettinger</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-beyond-pep-8-best-practices-for-beautiful-intelligible-code.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=wf-BqAjZb8M"&gt;&lt;img alt="Beyond PEP 8 -- Best practices for beautiful intelligible code" src="https://i.ytimg.com/vi/wf-BqAjZb8M/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Distillation of knowledge gained from a decade of Python consulting, Python training, code reviews, and serving as a core developer.   Learn to avoid some of the hazards of the PEP 8 style guide and learn what really matters for creating beautiful intelligible code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=wf-BqAjZb8M"&gt;https://www.youtube.com/watch?v=wf-BqAjZb8M&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Build and test wheel packages on Linux, OSX &amp; Windows</title><link href="/pycon-us-2015/pycon-us-2015-build-and-test-wheel-packages-on-linux-osx-windows.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Olivier Grisel</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-build-and-test-wheel-packages-on-linux-osx-windows.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=d-p6lJJObLU"&gt;&lt;img alt="Build and test wheel packages on Linux, OSX &amp;amp; Windows" src="https://i.ytimg.com/vi/d-p6lJJObLU/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Practical guide to build and test wheel packages for all platforms using free
Continuous Integration services such as Travis CI (Linux and OSX) and AppVeyor
(Windows).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=d-p6lJJObLU"&gt;https://www.youtube.com/watch?v=d-p6lJJObLU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Building a REST API Using Django &amp; Django REST Framework</title><link href="/pycon-us-2015/pycon-us-2015-building-a-rest-api-using-django-django-rest-framework.html" rel="alternate"></link><updated>2015-04-16T16:38:00+00:00</updated><author><name>Kenny Yarboro</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-building-a-rest-api-using-django-django-rest-framework.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=PwssEec3IRw"&gt;&lt;img alt="Building a REST API Using Django &amp;amp; Django REST Framework" src="https://i.ytimg.com/vi/PwssEec3IRw/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Using a combination of Django and Django REST Framework, we will build a Restaurant Menu that can be managed via a REST API. Starting from the install of the Django REST Framework, we will build our way to a functional API that meets the needs of developers and end-users. You will walk away with an understanding of the basic concepts of REST APIs and a working sample project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=PwssEec3IRw"&gt;https://www.youtube.com/watch?v=PwssEec3IRw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Building secure systems</title><link href="/pycon-us-2015/pycon-us-2015-building-secure-systems.html" rel="alternate"></link><updated>2015-04-16T16:45:00+00:00</updated><author><name>Laurens Van Houtven</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-building-secure-systems.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=PjcTwqYSk-E"&gt;&lt;img alt="Building secure systems" src="https://i.ytimg.com/vi/PjcTwqYSk-E/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;How do you build secure software? Why do we see bad security track records in projects that otherwise seem to tick all the right engineering boxes? Why is communicating about security issues so painful? More importantly: how can we do all of these things better?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=PjcTwqYSk-E"&gt;https://www.youtube.com/watch?v=PjcTwqYSk-E&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Bytes in the Machine: Inside the CPython interpreter</title><link href="/pycon-us-2015/pycon-us-2015-bytes-in-the-machine-inside-the-cpython-interpreter.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Allison Kaptur</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-bytes-in-the-machine-inside-the-cpython-interpreter.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=HVUTjQzESeo"&gt;&lt;img alt="Bytes in the Machine: Inside the CPython interpreter" src="https://i.ytimg.com/vi/HVUTjQzESeo/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Have you ever wondered how the CPython interpreter works? Do you know where to find a 1,500 line switch statement in CPython? I'll talk about the structure of the interpreter that we all use every day by explaining how Ned Batchelder and I chased down a mysterious bug in Byterun, a Python interpreter written in Python. We'll also see visualizations of the VM as it executes your code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=HVUTjQzESeo"&gt;https://www.youtube.com/watch?v=HVUTjQzESeo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Choose Your Own WSGI Deployment Adventure</title><link href="/pycon-us-2015/pycon-us-2015-choose-your-own-wsgi-deployment-adventure.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Kate Heddleston</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-choose-your-own-wsgi-deployment-adventure.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=R-YvQ_YvzA4"&gt;&lt;img alt="Choose Your Own WSGI Deployment Adventure" src="https://i.ytimg.com/vi/R-YvQ_YvzA4/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;From servers and proxies to configuration management, the Web Server Gateway Interface (WSGI) deployment ecosystem is complicated for new developers. This choose your own adventure talk contains decision points for the audience to choose topics via text and email votes. Each choice leads down a separate path to explain different confusing WSGI subjects. Bring your phone or laptop to participate!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=R-YvQ_YvzA4"&gt;https://www.youtube.com/watch?v=R-YvQ_YvzA4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Closing Messages</title><link href="/pycon-us-2015/pycon-us-2015-closing-messages.html" rel="alternate"></link><updated>2015-04-16T16:48:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-closing-messages.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=6_FOOvoBcZI"&gt;&lt;img alt="Closing Messages" src="https://i.ytimg.com/vi/6_FOOvoBcZI/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=6_FOOvoBcZI"&gt;https://www.youtube.com/watch?v=6_FOOvoBcZI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Cutting Off the Internet: Testing Applications that Use Requests</title><link href="/pycon-us-2015/pycon-us-2015-cutting-off-the-internet-testing-applications-that-use-requests.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Ian Cordasco</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-cutting-off-the-internet-testing-applications-that-use-requests.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=YHbKxFcDltM"&gt;&lt;img alt="Cutting Off the Internet: Testing Applications that Use Requests" src="https://i.ytimg.com/vi/YHbKxFcDltM/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;A brief and opinionated view of testing applications and libraries that use requests by a core-developer of requests. You will receive an overview of testing with responses, vcr, httpretty, mock, and betamax.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=YHbKxFcDltM"&gt;https://www.youtube.com/watch?v=YHbKxFcDltM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Data Science in Advertising: Or a future when we love ads</title><link href="/pycon-us-2015/pycon-us-2015-data-science-in-advertising-or-a-future-when-we-love-ads.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Soups Ranjan</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-data-science-in-advertising-or-a-future-when-we-love-ads.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=HZTgLuOpFU8"&gt;&lt;img alt="Data Science in Advertising: Or a future when we love ads" src="https://i.ytimg.com/vi/HZTgLuOpFU8/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This talk would give you an in-depth overview of Real-Time Bidded (RTB) advertising systems, and why with increasing sophistication in ad-tech, in the future we will wonder why we ever hated ads. In particular, this talk will discuss technical challenges in ad systems and how we use Computational Advertising and Data Science to solve problems around Click Through Rate (CTR) Prediction, Auto-Bidding systems, Traffic Prediction, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=HZTgLuOpFU8"&gt;https://www.youtube.com/watch?v=HZTgLuOpFU8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Delving into the Django Admin</title><link href="/pycon-us-2015/pycon-us-2015-delving-into-the-django-admin.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Jacinda Shelly</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-delving-into-the-django-admin.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=5ajZMpTcUZU"&gt;&lt;img alt="Delving into the Django Admin" src="https://i.ytimg.com/vi/5ajZMpTcUZU/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;The admin interface is widely considered a &amp;quot;&amp;quot;killer feature&amp;quot;&amp;quot; of Django. At its most basic, you can just register all your models and be on your way, but there's so much more available within Django's admin. This tutorial takes you step by step through the creation and progressive improvement of an admin interface for a fictional library (all code is publicly available).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=5ajZMpTcUZU"&gt;https://www.youtube.com/watch?v=5ajZMpTcUZU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Demystifying Docker</title><link href="/pycon-us-2015/pycon-us-2015-demystifying-docker.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>"Andrew T. Baker"</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-demystifying-docker.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=GVVtR_hrdKI"&gt;&lt;img alt="Demystifying Docker" src="https://i.ytimg.com/vi/GVVtR_hrdKI/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Docker was one of last year’s most talked about open source projects - but what is it? And what does it mean for deploying applications? This talk will explain what Docker is and where it fits in with other deployment techniques. Attendees will learn the fundamentals of Docker, see some practical examples of how Docker is used, and consider if Docker could be a useful addition to their platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=GVVtR_hrdKI"&gt;https://www.youtube.com/watch?v=GVVtR_hrdKI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Describing Descriptors</title><link href="/pycon-us-2015/pycon-us-2015-describing-descriptors.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Laura Rupprecht</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-describing-descriptors.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=h2-WPwGnHqE"&gt;&lt;img alt="Describing Descriptors" src="https://i.ytimg.com/vi/h2-WPwGnHqE/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;The Python library uses descriptors frequently, but most developers overlook this feature. This talk will cover what a descriptor is, the current uses in the standard library, and how custom descriptors can be used in a developer’s toolset to eliminate repeated code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=h2-WPwGnHqE"&gt;https://www.youtube.com/watch?v=h2-WPwGnHqE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Descriptors and Metaclasses</title><link href="/pycon-us-2015/pycon-us-2015-descriptors-and-metaclasses.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Mike Müller</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-descriptors-and-metaclasses.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=v2WTVCyTYMw"&gt;&lt;img alt="Descriptors and Metaclasses" src="https://i.ytimg.com/vi/v2WTVCyTYMw/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Descriptors and metaclasses are advanced Python features. While it is
possible to write Python programs without active knowledge of them,
knowing more about them facilitates a deeper understanding of
the language. With examples, you will learn how they work and how to
write your own descriptors and metaclasses. Furthermore, you will understand
when to use and when better not to use them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=v2WTVCyTYMw"&gt;https://www.youtube.com/watch?v=v2WTVCyTYMw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Distributed Systems 101</title><link href="/pycon-us-2015/pycon-us-2015-distributed-systems-101.html" rel="alternate"></link><updated>2015-04-16T16:45:00+00:00</updated><author><name>Laurens Van Houtven</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-distributed-systems-101.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=YAFGQurdJ3U"&gt;&lt;img alt="Distributed Systems 101" src="https://i.ytimg.com/vi/YAFGQurdJ3U/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;A very brief introduction to the theory and practice of distributed systems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=YAFGQurdJ3U"&gt;https://www.youtube.com/watch?v=YAFGQurdJ3U&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Django in Depth</title><link href="/pycon-us-2015/pycon-us-2015-django-in-depth.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>James Bennett</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-django-in-depth.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=tkwZ1jG3XgA"&gt;&lt;img alt="Django in Depth" src="https://i.ytimg.com/vi/tkwZ1jG3XgA/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This is a tutorial that goes beyond most tutorials; it's meant for developers who already know a bit about Django and want to really understand the inner guts of the framework. This tutorial will &lt;em&gt;not&lt;/em&gt; involve writing code or apps; rather, it'll be a deep tour of the workings and APIs of Django itself, across all the bundled components and at all levels of the stack.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=tkwZ1jG3XgA"&gt;https://www.youtube.com/watch?v=tkwZ1jG3XgA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Docker 101: Introduction to Docker</title><link href="/pycon-us-2015/pycon-us-2015-docker-101-introduction-to-docker.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>"Andrew T. Baker"</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-docker-101-introduction-to-docker.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=YiZkHUbE6N0"&gt;&lt;img alt="Docker 101: Introduction to Docker" src="https://i.ytimg.com/vi/YiZkHUbE6N0/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Docker was one of last year’s most talked about open source projects - but what is it? And what does it mean for deploying applications? This tutorial will explain what Docker is and where it fits in with other deployment and configuration management tools. Students will then learn the basics of working with Docker containers, how to “dockerize” their Python apps, and some emerging best practices.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=YiZkHUbE6N0"&gt;https://www.youtube.com/watch?v=YiZkHUbE6N0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Don't Make Us Say We Told You So: virtualenv for New Pythonistas</title><link href="/pycon-us-2015/pycon-us-2015-dont-make-us-say-we-told-you-so-virtualenv-for-new-pythonistas.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Matt Makai</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-dont-make-us-say-we-told-you-so-virtualenv-for-new-pythonistas.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=Xdv7vwIIThY"&gt;&lt;img alt="Don't Make Us Say We Told You So: virtualenv for New Pythonistas" src="https://i.ytimg.com/vi/Xdv7vwIIThY/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Even though it’s possible to program without using virtual environments, you can shoot yourself in the foot without them. This talk will start with an illustration of how not using virtual environments can mess you up as a programmer, and will walk you through a simple way to get started with good habits using virtualenv.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=Xdv7vwIIThY"&gt;https://www.youtube.com/watch?v=Xdv7vwIIThY&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Eventually Correct: Testing Async Apps</title><link href="/pycon-us-2015/pycon-us-2015-eventually-correct-testing-async-apps.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>"A. Jesse Jiryu Davis"</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-eventually-correct-testing-async-apps.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=GpvCSkxLiZo"&gt;&lt;img alt="Eventually Correct: Testing Async Apps" src="https://i.ytimg.com/vi/GpvCSkxLiZo/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Async frameworks like Tornado and asyncio scramble our usual strategies for writing sequential code. This is most problematic when writing tests: how can you validate the outcome when you don’t know when to expect it? This talk introduces you to methods and practices for unittesting async applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=GpvCSkxLiZo"&gt;https://www.youtube.com/watch?v=GpvCSkxLiZo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Experimental pure mathematics using Sage</title><link href="/pycon-us-2015/pycon-us-2015-experimental-pure-mathematics-using-sage.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Viviane Pons</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-experimental-pure-mathematics-using-sage.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=3LZiZKgVjaU"&gt;&lt;img alt="Experimental pure mathematics using Sage" src="https://i.ytimg.com/vi/3LZiZKgVjaU/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Pure mathematics is not always big formulas written on endless notebooks, it can also be hidden behind python code. In combinatorics, we study classical computer science objects like trees or graphs with a mathematical perspective. This talk aims to show how computer exploration and experimentation can be used to discover and prove new mathematical results.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=3LZiZKgVjaU"&gt;https://www.youtube.com/watch?v=3LZiZKgVjaU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Exploring is never boring: understanding CPython without reading the code</title><link href="/pycon-us-2015/pycon-us-2015-exploring-is-never-boring-understanding-cpython-without-reading-the-code.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Allison Kaptur</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-exploring-is-never-boring-understanding-cpython-without-reading-the-code.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=ZSIRGLmQTLk"&gt;&lt;img alt="Exploring is never boring: understanding CPython without reading the code" src="https://i.ytimg.com/vi/ZSIRGLmQTLk/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Have you started to read the source code of CPython but not gotten as far as you wanted? Maybe you want to understand more about CPython but don't know where to begin. I'll present a number of strategies for getting more familiar with Python under the hood that go beyond &amp;quot;&amp;quot;just read it!&amp;quot;&amp;quot; This talk isn't about contributing - it's about getting into the code base and discovering interesting things.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=ZSIRGLmQTLk"&gt;https://www.youtube.com/watch?v=ZSIRGLmQTLk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Exploring Minecraft and Python: Learning to Code Through Play</title><link href="/pycon-us-2015/pycon-us-2015-exploring-minecraft-and-python-learning-to-code-through-play.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Kurt Grandis</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-exploring-minecraft-and-python-learning-to-code-through-play.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=WsPQDuHt__w"&gt;&lt;img alt="Exploring Minecraft and Python: Learning to Code Through Play" src="https://i.ytimg.com/vi/WsPQDuHt__w/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Interest and activity in childhood computing education continues to grow. Meanwhile, Minecraft has become a massive cultural phenomenon as a fun, motivating platform that encourages exploration and play. This talk demonstrates how Python can be used to teach programming while exploring the world of Minecraft. We will cover how to set up learning environments, curricula, and case studies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=WsPQDuHt__w"&gt;https://www.youtube.com/watch?v=WsPQDuHt__w&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Facts and Myths about Python names and values</title><link href="/pycon-us-2015/pycon-us-2015-facts-and-myths-about-python-names-and-values.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Ned Batchelder</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-facts-and-myths-about-python-names-and-values.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=_AEJHKGk9ns"&gt;&lt;img alt="Facts and Myths about Python names and values" src="https://i.ytimg.com/vi/_AEJHKGk9ns/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;The behavior of names and values in Python can be confusing. Like many parts of Python, it has an underlying simplicity that can be hard to discern, especially if you are used to other programming languages. Here I'll explain how it all works, and present some facts and myths along the way.  Call-by-reference? Call-by-value? The answer will be clear!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=_AEJHKGk9ns"&gt;https://www.youtube.com/watch?v=_AEJHKGk9ns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Finding Spammers &amp; Scammers through Rate Tracking with Python &amp; Redis</title><link href="/pycon-us-2015/pycon-us-2015-finding-spammers-scammers-through-rate-tracking-with-python-redis.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Jay Chan</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-finding-spammers-scammers-through-rate-tracking-with-python-redis.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=tIBkiXvEAC0"&gt;&lt;img alt="Finding Spammers &amp;amp; Scammers through Rate Tracking with Python &amp;amp; Redis" src="https://i.ytimg.com/vi/tIBkiXvEAC0/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This talk provides an introduction to rate tracking as well as an explanation of a particularly cool way to implement it. You will learn what rate tracking is, why you would want to do it, and then how you can use build a Redis-backed “velocity engine”  in Python to do just that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=tIBkiXvEAC0"&gt;https://www.youtube.com/watch?v=tIBkiXvEAC0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Finding Your Groove: Contributing to CPython and Beyond</title><link href="/pycon-us-2015/pycon-us-2015-finding-your-groove-contributing-to-cpython-and-beyond.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Carol Willing</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-finding-your-groove-contributing-to-cpython-and-beyond.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=szeo1XgmuEk"&gt;&lt;img alt="Finding Your Groove: Contributing to CPython and Beyond" src="https://i.ytimg.com/vi/szeo1XgmuEk/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Do you hear a jumble of jargony noise when reading Python mailing lists? Do you silently edit your dotfiles and playlists to avoid asking questions on IRC? Come see how Jazz can help you understand and contribute to Python. While both seem vast and complex, they build on simple concepts. By mixing art, knowledge, and improv, you can find your CPython contribution groove and enjoy cool cats' music.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=szeo1XgmuEk"&gt;https://www.youtube.com/watch?v=szeo1XgmuEk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Fire your supervisord running Python apps on CoreOS</title><link href="/pycon-us-2015/pycon-us-2015-fire-your-supervisord-running-python-apps-on-coreos.html" rel="alternate"></link><updated>2015-04-16T16:42:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-fire-your-supervisord-running-python-apps-on-coreos.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=jCor69OeR0g"&gt;&lt;img alt="Fire your supervisord running Python apps on CoreOS" src="https://i.ytimg.com/vi/jCor69OeR0g/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=jCor69OeR0g"&gt;https://www.youtube.com/watch?v=jCor69OeR0g&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Flask Workshop</title><link href="/pycon-us-2015/pycon-us-2015-flask-workshop.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Miguel Grinberg</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-flask-workshop.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=DIcpEg77gdE"&gt;&lt;img alt="Flask Workshop" src="https://i.ytimg.com/vi/DIcpEg77gdE/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Flask is a web framework for Python based on Werkzeug, Jinja 2 and good intentions. It is considered a micro-framework, but don't get the &amp;quot;&amp;quot;micro&amp;quot;&amp;quot; part fool you; Flask can do everything others can do, many times in a simpler, leaner way. In this tutorial session we will build a web application together. Bring your laptop and your questions!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=DIcpEg77gdE"&gt;https://www.youtube.com/watch?v=DIcpEg77gdE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Free Software, Free People</title><link href="/pycon-us-2015/pycon-us-2015-free-software-free-people.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Pete Fein</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-free-software-free-people.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=A3dimvwrnO8"&gt;&lt;img alt="Free Software, Free People" src="https://i.ytimg.com/vi/A3dimvwrnO8/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Four years after the Arab Spring &amp;amp; 2 years after Snowden, little has changed. What now? This talk will remember Telecomix, an ad-hoc activist cluster that supported free communication around the world. Stories of humans and machines, reflection on 3 years of hacktivism &amp;amp; exploration of similarities to the free software community. It follows a 2011 Pycon lightning talk given after Tahrir Square.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=A3dimvwrnO8"&gt;https://www.youtube.com/watch?v=A3dimvwrnO8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Getting comfortable with web security: A hands-on session</title><link href="/pycon-us-2015/pycon-us-2015-getting-comfortable-with-web-security-a-hands-on-session.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-getting-comfortable-with-web-security-a-hands-on-session.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=f9XVNIeRxUo"&gt;&lt;img alt="Getting comfortable with web security: A hands-on session" src="https://i.ytimg.com/vi/f9XVNIeRxUo/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Web application security can be an intimidating discipline, yet it can be of supreme importance for the people who use the things we build.&lt;/p&gt;
&lt;p&gt;In this tutorial, you'll learn about essential topics in web security, and you will gain hands-on practice identifying and leveraging vulnerabilities in a Python-based web app. For each issue, we will cover how your code can stay on the side of safety.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=f9XVNIeRxUo"&gt;https://www.youtube.com/watch?v=f9XVNIeRxUo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Getting to Jython 2.7 and beyond</title><link href="/pycon-us-2015/pycon-us-2015-getting-to-jython-27-and-beyond.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Jim Baker</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-getting-to-jython-27-and-beyond.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=hLm3garVQFo"&gt;&lt;img alt="Getting to Jython 2.7 and beyond" src="https://i.ytimg.com/vi/hLm3garVQFo/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;So how did we get to Jython 2.7 anyway? And what are our future plans?
In this talk, you will get a taste of how Jython works, some new
functionality, and especially how Jython leverages both Python and
Java to provide a very compatible solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=hLm3garVQFo"&gt;https://www.youtube.com/watch?v=hLm3garVQFo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Good Test, Bad Test</title><link href="/pycon-us-2015/pycon-us-2015-good-test-bad-test.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Dan Crosta</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-good-test-bad-test.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=RfR_QRoNZxo"&gt;&lt;img alt="Good Test, Bad Test" src="https://i.ytimg.com/vi/RfR_QRoNZxo/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;In a highly dynamic language like Python, testing is even more critical than in compiled or more static languages. Like any other code we produce, tests can be either good or bad. This talk explores three fallacies of testing, and the mistakes and bad habits these fallacies encourage; and shows how to write good tests which help assure proper behavior without impeding development progress.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=RfR_QRoNZxo"&gt;https://www.youtube.com/watch?v=RfR_QRoNZxo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Gradual Typing for Python 3</title><link href="/pycon-us-2015/pycon-us-2015-gradual-typing-for-python-3.html" rel="alternate"></link><updated>2015-04-16T15:36:00+00:00</updated><author><name>Guido van Rossum</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-gradual-typing-for-python-3.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=2wDvzy6Hgxg"&gt;&lt;img alt="Gradual Typing for Python 3" src="https://i.ytimg.com/vi/2wDvzy6Hgxg/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=2wDvzy6Hgxg"&gt;https://www.youtube.com/watch?v=2wDvzy6Hgxg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Graph Database Patterns in Python</title><link href="/pycon-us-2015/pycon-us-2015-graph-database-patterns-in-python.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Elizabeth Ramirez</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-graph-database-patterns-in-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=fNAzyZZZ-IQ"&gt;&lt;img alt="Graph Database Patterns in Python" src="https://i.ytimg.com/vi/fNAzyZZZ-IQ/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Creating and using models from a graph database can be quite different to the ones used for row/column/document-oriented databases, in the sense that the same query patterns could differ significantly in structure and performance. This session will present how to create models in Python for Titan property graphs, that allow you to manipulate graphs as if you were querying with Gremlin DSL.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=fNAzyZZZ-IQ"&gt;https://www.youtube.com/watch?v=fNAzyZZZ-IQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Grids, Streets and Pipelines: Building a linguistic street map with scikit-learn</title><link href="/pycon-us-2015/pycon-us-2015-grids-streets-and-pipelines-building-a-linguistic-street-map-with-scikit-learn.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Michelle Fullwood</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-grids-streets-and-pipelines-building-a-linguistic-street-map-with-scikit-learn.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=MIFOTFdtK2k"&gt;&lt;img alt="Grids, Streets and Pipelines: Building a linguistic street map with scikit-learn" src="https://i.ytimg.com/vi/MIFOTFdtK2k/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Have you built a classifier in scikit-learn with out-of-the-box features, been disappointed with the results, and wanted to know where to go next? This talk shows how to add your own feature Pipelines and how to tune hyperparameters using GridSearchCV. We'll apply this to the problem of classifying streetnames in Singapore by linguistic origin, and turn the results into a colour-coded street map.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=MIFOTFdtK2k"&gt;https://www.youtube.com/watch?v=MIFOTFdtK2k&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Hadoop with Python</title><link href="/pycon-us-2015/pycon-us-2015-hadoop-with-python.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Donald Miner</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-hadoop-with-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=b8HLYUp_fA8"&gt;&lt;img alt="Hadoop with Python" src="https://i.ytimg.com/vi/b8HLYUp_fA8/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;In this tutorial, students will learn how to use Python with Apache Hadoop to store, process, and analyze incredibly large data sets. Hadoop has become the standard in distributed data processing, but has mostly required Java in the past. Today, there are a numerous open source projects that support Hadoop in Python and this tutorial will show students how to use them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=b8HLYUp_fA8"&gt;https://www.youtube.com/watch?v=b8HLYUp_fA8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Hands-on Data Analysis with Python</title><link href="/pycon-us-2015/pycon-us-2015-hands-on-data-analysis-with-python.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Sarah Guido</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-hands-on-data-analysis-with-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=L4Hbv4ugUWk"&gt;&lt;img alt="Hands-on Data Analysis with Python" src="https://i.ytimg.com/vi/L4Hbv4ugUWk/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Python is quickly becoming the go-to language for data analysis. However, it can be difficult to figure out which tools are good to use. In this workshop, we’ll work through in-depth examples of tools for data wrangling, machine learning, and data visualization. I’ll show you how to work through a data analysis workflow, and how to deal with different kinds of data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=L4Hbv4ugUWk"&gt;https://www.youtube.com/watch?v=L4Hbv4ugUWk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Hands-on with Pydata: how to build a minimal recommendation engine.</title><link href="/pycon-us-2015/pycon-us-2015-hands-on-with-pydata-how-to-build-a-minimal-recommendation-engine.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Christian Fricke</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-hands-on-with-pydata-how-to-build-a-minimal-recommendation-engine.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=F6gWjOc1FUs"&gt;&lt;img alt="Hands-on with Pydata: how to build a minimal recommendation engine." src="https://i.ytimg.com/vi/F6gWjOc1FUs/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;In this tutorial we'll set ourselves the goal of building a minimal recommendation engine, and in the process learn about Python's excellent Pydata and related projects and tools: NumPy, pandas, and the IPython Notebook.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=F6gWjOc1FUs"&gt;https://www.youtube.com/watch?v=F6gWjOc1FUs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Hash Functions and You: Partners in Freedom</title><link href="/pycon-us-2015/pycon-us-2015-hash-functions-and-you-partners-in-freedom.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Curtis Lassam</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-hash-functions-and-you-partners-in-freedom.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=IGwNQfjLTp0"&gt;&lt;img alt="Hash Functions and You: Partners in Freedom" src="https://i.ytimg.com/vi/IGwNQfjLTp0/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Our trusty friend, the hash function, is as crucial to programming as linked lists or recursion, but it doesn't always get the press that it deserves.&lt;/p&gt;
&lt;p&gt;We're going to talk about hash functions, some data structures involving hash functions, the stately bloom filter, and the security implications of password hashing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=IGwNQfjLTp0"&gt;https://www.youtube.com/watch?v=IGwNQfjLTp0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>How our engineering environments are killing diversity (and how we can fix it).</title><link href="/pycon-us-2015/pycon-us-2015-how-our-engineering-environments-are-killing-diversity-and-how-we-can-fix-it.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Kate Heddleston</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-how-our-engineering-environments-are-killing-diversity-and-how-we-can-fix-it.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=kNke_4WOWAU"&gt;&lt;img alt="How our engineering environments are killing diversity (and how we can fix it)." src="https://i.ytimg.com/vi/kNke_4WOWAU/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This talk focuses on how engineering team environments can impact employee behavior, and how environmental factors can prohibit diversity at tech companies. I will talk about some of the key problems that exist in current engineering environments and how they can be fixed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=kNke_4WOWAU"&gt;https://www.youtube.com/watch?v=kNke_4WOWAU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>How to Be More Effective with Functions</title><link href="/pycon-us-2015/pycon-us-2015-how-to-be-more-effective-with-functions.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Brett Slatkin</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-how-to-be-more-effective-with-functions.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=WjJUPxKB164"&gt;&lt;img alt="How to Be More Effective with Functions" src="https://i.ytimg.com/vi/WjJUPxKB164/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Functions improve readability, encourage reuse, and facilitate refactoring. Python has many unique features that make functions significantly more powerful. This talk will show you the best ways to use functions in Python: when *args is helpful and when it'll crash your programs; how to use generators for arguments and return values; the value of keyword vs. keyword-only arguments; and more!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=WjJUPxKB164"&gt;https://www.youtube.com/watch?v=WjJUPxKB164&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>How to build a brain with Python</title><link href="/pycon-us-2015/pycon-us-2015-how-to-build-a-brain-with-python.html" rel="alternate"></link><updated>2015-04-16T16:42:00+00:00</updated><author><name>Trevor Bekolay</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-how-to-build-a-brain-with-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=7hvpoLKJHOw"&gt;&lt;img alt="How to build a brain with Python" src="https://i.ytimg.com/vi/7hvpoLKJHOw/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=7hvpoLKJHOw"&gt;https://www.youtube.com/watch?v=7hvpoLKJHOw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>How to interpret your own genome using (mostly) Python.</title><link href="/pycon-us-2015/pycon-us-2015-how-to-interpret-your-own-genome-using-mostly-python.html" rel="alternate"></link><updated>2015-04-16T19:31:00+00:00</updated><author><name>"C. Titus Brown"</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-how-to-interpret-your-own-genome-using-mostly-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=jV4YMQHZmMk"&gt;&lt;img alt="How to interpret your own genome using (mostly) Python." src="https://i.ytimg.com/vi/jV4YMQHZmMk/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;We’ve entered the era of the $1000 human genome, and soon it will be straightforward to get your own genome sequenced by a commercial company.  But what does the data mean? What information can you get out of your genomic sequence? And what are the barriers to deeper analysis?  What kinds of algorithms and databases are used in genomic analysis? All this, and more, will be revealed in this talk.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=jV4YMQHZmMk"&gt;https://www.youtube.com/watch?v=jV4YMQHZmMk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>How to make your code Python 2/3 compatible</title><link href="/pycon-us-2015/pycon-us-2015-how-to-make-your-code-python-23-compatible.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Brett Cannon</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-how-to-make-your-code-python-23-compatible.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=KPzDX5TX5HE"&gt;&lt;img alt="How to make your code Python 2/3 compatible" src="https://i.ytimg.com/vi/KPzDX5TX5HE/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;You know Python 3 is an improvement over Python 2 and you want to use it. Unfortunately you have legacy Python 2 source code that needs to stay compatible. But don't fret! This talk will show you that you can make your code be Python 2/3 source-compatible using various tools to pick up the nitty-gritty work and help modernize your Python code to newer Python 2 practices.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=KPzDX5TX5HE"&gt;https://www.youtube.com/watch?v=KPzDX5TX5HE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>How to Write Reusable Code</title><link href="/pycon-us-2015/pycon-us-2015-how-to-write-reusable-code.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Greg Ward</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-how-to-write-reusable-code.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=r9cnHO15YgU"&gt;&lt;img alt="How to Write Reusable Code" src="https://i.ytimg.com/vi/r9cnHO15YgU/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Learning to write high-quality, reusable code takes years of dedicated work. Or you can take a shortcut: attend this talk and learn some of the tricks I've figured out over a couple of decades of programming.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=r9cnHO15YgU"&gt;https://www.youtube.com/watch?v=r9cnHO15YgU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Hyperactive: HTTP/2 and Python</title><link href="/pycon-us-2015/pycon-us-2015-hyperactive-http2-and-python.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Cory Benfield</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-hyperactive-http2-and-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=ACXVyvm5eTc"&gt;&lt;img alt="Hyperactive: HTTP/2 and Python" src="https://i.ytimg.com/vi/ACXVyvm5eTc/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;The internet has spoken, HTTP is to get its first serious update in 15 years. In this talk we'll discuss what HTTP/2 is, why it's happening, and how it's going to affect you and everyone you love. We'll briefly talk about how you can get started with HTTP/2, and some interesting projects associated with it, including Hyper, the first Python HTTP/2 library.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=ACXVyvm5eTc"&gt;https://www.youtube.com/watch?v=ACXVyvm5eTc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>I18N: World Domination the Easy Way</title><link href="/pycon-us-2015/pycon-us-2015-i18n-world-domination-the-easy-way.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Sarina Canelake</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-i18n-world-domination-the-easy-way.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=UOOMFGURr5I"&gt;&lt;img alt="I18N: World Domination the Easy Way" src="https://i.ytimg.com/vi/UOOMFGURr5I/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Have you heard about internationalization (i18n) and wondered what it meant? Perhaps your project already has i18n of its strings but you have a nagging feeling you could be doing it better. This talk will walk through the basics of i18n’ing a Django project (but the principles apply to any project!), and how to make the process of localization (l10n) go more smoothly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=UOOMFGURr5I"&gt;https://www.youtube.com/watch?v=UOOMFGURr5I&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Improve your development environments with virtualization</title><link href="/pycon-us-2015/pycon-us-2015-improve-your-development-environments-with-virtualization.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Luke Sneeringer</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-improve-your-development-environments-with-virtualization.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=Dg_vPMnC7_k"&gt;&lt;img alt="Improve your development environments with virtualization" src="https://i.ytimg.com/vi/Dg_vPMnC7_k/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;A talk on how to employ virtualization to make development easier, more portable, and have it more closely adhere to production environments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=Dg_vPMnC7_k"&gt;https://www.youtube.com/watch?v=Dg_vPMnC7_k&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Interactive data for the web</title><link href="/pycon-us-2015/pycon-us-2015-interactive-data-for-the-web.html" rel="alternate"></link><updated>2015-04-29T13:48:00+00:00</updated><author><name>Sarah Bird</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-interactive-data-for-the-web.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=O5OvOLK-xqQ"&gt;&lt;img alt="Interactive data for the web" src="https://i.ytimg.com/vi/O5OvOLK-xqQ/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Interactive data visualization libraries are mostly a JavaScript stronghold. The new Python library, Bokeh, provides a simple, clean way to make more shiny things. Although it comes from the data science community, it has a lot to offer web developers. For a visualization you might have built in d3.js, I'll show how to build it in Bokeh, how to test it, and how to hook it into your web app.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=O5OvOLK-xqQ"&gt;https://www.youtube.com/watch?v=O5OvOLK-xqQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Introduction to game programming with Kivy</title><link href="/pycon-us-2015/pycon-us-2015-introduction-to-game-programming-with-kivy.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Richard Jones</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-introduction-to-game-programming-with-kivy.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=U14P8gtjQmU"&gt;&lt;img alt="Introduction to game programming with Kivy" src="https://i.ytimg.com/vi/U14P8gtjQmU/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This tutorial will walk the attendees through development of a simple game using Kivy with time left over for some experimentation and exploration of different types of games.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=U14P8gtjQmU"&gt;https://www.youtube.com/watch?v=U14P8gtjQmU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Introduction to HTTPS: A Comedy of Errors</title><link href="/pycon-us-2015/pycon-us-2015-introduction-to-https-a-comedy-of-errors.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Ashwini Oruganti</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-introduction-to-https-a-comedy-of-errors.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=HqnUKTjxI1E"&gt;&lt;img alt="Introduction to HTTPS: A Comedy of Errors" src="https://i.ytimg.com/vi/HqnUKTjxI1E/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Given recent increases in hostile attacks on internet services and large scale surveillance operations by certain unnamed government organizations, security in our software is becoming ever more important. We'll give you an idea of how modern crypto works in web services and clients, look at some of the common flaws in these crypto implementations, and discuss recent developments in TLS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=HqnUKTjxI1E"&gt;https://www.youtube.com/watch?v=HqnUKTjxI1E&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Introduction to Spark with python</title><link href="/pycon-us-2015/pycon-us-2015-introduction-to-spark-with-python.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Orlando Karam</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-introduction-to-spark-with-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=9xYfNznjClE"&gt;&lt;img alt="Introduction to Spark with python" src="https://i.ytimg.com/vi/9xYfNznjClE/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;In this tutorial we will cover the basics of writing spark programs in python (initially from the pyspark shell, later with independent applications). We will also discuss some of the theory behind spark, and some performance considerations when using spark in a cluster.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=9xYfNznjClE"&gt;https://www.youtube.com/watch?v=9xYfNznjClE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Investigating Python Wats</title><link href="/pycon-us-2015/pycon-us-2015-investigating-python-wats.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Amy Hanlon</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-investigating-python-wats.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=sH4XF6pKKmk"&gt;&lt;img alt="Investigating Python Wats" src="https://i.ytimg.com/vi/sH4XF6pKKmk/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Many of us have experienced a &amp;quot;&amp;quot;wat&amp;quot;&amp;quot; in Python - some behavior that totally mystifies us. We'll look at three areas where wats arise - identity, mutability, and scope. For each of these three topics, we'll look at some common surprising behaviors, investigate the cause of the behaviors, and cover some practical tips on how to avoid related bugs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=sH4XF6pKKmk"&gt;https://www.youtube.com/watch?v=sH4XF6pKKmk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>IPython &amp; Jupyter in depth: high productivity interactive and parallel python</title><link href="/pycon-us-2015/pycon-us-2015-ipython-jupyter-in-depth-high-productivity-interactive-and-parallel-python.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Kyle Kelley</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-ipython-jupyter-in-depth-high-productivity-interactive-and-parallel-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=05fA_DXgW-Y"&gt;&lt;img alt="IPython &amp;amp; Jupyter in depth: high productivity interactive and parallel python" src="https://i.ytimg.com/vi/05fA_DXgW-Y/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;IPython and Jupyter provide tools for interactive and parallel computing that are widely used in scientific computing, but can benefit any Python developer. We will show how to use IPython in different ways, as: an interactive shell, a graphical console, a network-aware VM in GUIs, a web-based notebook with code, graphics and rich HTML, and a high-level framework for parallel computing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=05fA_DXgW-Y"&gt;https://www.youtube.com/watch?v=05fA_DXgW-Y&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Is Your REST API RESTful?</title><link href="/pycon-us-2015/pycon-us-2015-is-your-rest-api-restful.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Miguel Grinberg</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-is-your-rest-api-restful.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=pZYRC8IbCwk"&gt;&lt;img alt="Is Your REST API RESTful?" src="https://i.ytimg.com/vi/pZYRC8IbCwk/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Writing a fully complaint REST API is hard, so hard it is too common for APIs to violate one or more of the REST architectural principles. In this talk I will describe the six REST principles, and I will tell you what happens if you don't follow them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=pZYRC8IbCwk"&gt;https://www.youtube.com/watch?v=pZYRC8IbCwk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Keynote - Catherine Bracy</title><link href="/pycon-us-2015/pycon-us-2015-keynote-catherine-bracy.html" rel="alternate"></link><updated>2015-04-16T16:40:00+00:00</updated><author><name>Catherine Bracy</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-keynote-catherine-bracy.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=LOZk5ttyC9Y"&gt;&lt;img alt="Keynote - Catherine Bracy" src="https://i.ytimg.com/vi/LOZk5ttyC9Y/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=LOZk5ttyC9Y"&gt;https://www.youtube.com/watch?v=LOZk5ttyC9Y&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Keynote - Gabriella Coleman</title><link href="/pycon-us-2015/pycon-us-2015-keynote-gabriella-coleman.html" rel="alternate"></link><updated>2015-04-16T16:46:00+00:00</updated><author><name>Gabriella Coleman</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-keynote-gabriella-coleman.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=lNqtyi3sM-k"&gt;&lt;img alt="Keynote  - Gabriella Coleman" src="https://i.ytimg.com/vi/lNqtyi3sM-k/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=lNqtyi3sM-k"&gt;https://www.youtube.com/watch?v=lNqtyi3sM-k&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Keynote - Guido van Rossum</title><link href="/pycon-us-2015/pycon-us-2015-keynote-guido-van-rossum.html" rel="alternate"></link><updated>2015-04-16T16:46:00+00:00</updated><author><name>Guido van Rossum</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-keynote-guido-van-rossum.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=G-uKNd5TSBw"&gt;&lt;img alt="Keynote - Guido van Rossum" src="https://i.ytimg.com/vi/G-uKNd5TSBw/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=G-uKNd5TSBw"&gt;https://www.youtube.com/watch?v=G-uKNd5TSBw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Keynote - Jacob Kaplan-Moss</title><link href="/pycon-us-2015/pycon-us-2015-keynote-jacob-kaplan-moss.html" rel="alternate"></link><updated>2015-04-16T16:33:00+00:00</updated><author><name>Jacob Kaplan-Moss</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-keynote-jacob-kaplan-moss.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=hIJdFxYlEKE"&gt;&lt;img alt="Keynote - Jacob Kaplan-Moss" src="https://i.ytimg.com/vi/hIJdFxYlEKE/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=hIJdFxYlEKE"&gt;https://www.youtube.com/watch?v=hIJdFxYlEKE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Keynote - Van Lindberg - Pycon 2015</title><link href="/pycon-us-2015/pycon-us-2015-keynote-van-lindberg-pycon-2015.html" rel="alternate"></link><updated>2015-04-16T16:33:00+00:00</updated><author><name>Van Lindberg</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-keynote-van-lindberg-pycon-2015.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=lvlfTZzJ2_Q"&gt;&lt;img alt="Keynote - Van Lindberg - Pycon 2015" src="https://i.ytimg.com/vi/lvlfTZzJ2_Q/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=lvlfTZzJ2_Q"&gt;https://www.youtube.com/watch?v=lvlfTZzJ2_Q&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Learning from other's mistakes: Data-driven analysis of Python code</title><link href="/pycon-us-2015/pycon-us-2015-learning-from-others-mistakes-data-driven-analysis-of-python-code.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Andreas Dewes</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-learning-from-others-mistakes-data-driven-analysis-of-python-code.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=rN0kNQLDYCI"&gt;&lt;img alt="Learning from other's mistakes: Data-driven analysis of Python code" src="https://i.ytimg.com/vi/rN0kNQLDYCI/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Static code analysis is an useful tool that can help to detect bugs early in the software development life cycle. I will explain the basics of static analysis and show the challenges we face when analyzing Python code. I will introduce a data-driven approach to code analysis that makes use of public code and example-based learning and show how it can be applied to analyzing Python code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=rN0kNQLDYCI"&gt;https://www.youtube.com/watch?v=rN0kNQLDYCI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Lessons learned with asyncio ("Look ma, I wrote a distributed hash table!")</title><link href="/pycon-us-2015/pycon-us-2015-lessons-learned-with-asyncio-look-ma-i-wrote-a-distributed-hash-table.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Nicholas Tollervey</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-lessons-learned-with-asyncio-look-ma-i-wrote-a-distributed-hash-table.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=1eew8BngN7Y"&gt;&lt;img alt="Lessons learned with asyncio (&amp;quot;Look ma, I wrote a distributed hash table!&amp;quot;)" src="https://i.ytimg.com/vi/1eew8BngN7Y/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This talk introduces the asyncio module. I'll cover what it's for, how it works and describe how I used it to write a real-world networked application (a distributed hash table).
We'll explore the event loop, co-routines, futures and networking with examples from my code.
This won't be an exhaustive exposition. Rather, attendees will grasp enough of asyncio to continue with their own studies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=1eew8BngN7Y"&gt;https://www.youtube.com/watch?v=1eew8BngN7Y&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Lighting Talks - April 10th</title><link href="/pycon-us-2015/pycon-us-2015-lighting-talks-april-10th.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Unknown</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-lighting-talks-april-10th.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=yws4n-0-Yj8"&gt;&lt;img alt="Lighting Talks - April 10th" src="https://i.ytimg.com/vi/yws4n-0-Yj8/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=yws4n-0-Yj8"&gt;https://www.youtube.com/watch?v=yws4n-0-Yj8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Lighting Talks - April 11th 17h30</title><link href="/pycon-us-2015/pycon-us-2015-lighting-talks-april-11th-17h30.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Unknown</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-lighting-talks-april-11th-17h30.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=JVVMMULwR4s"&gt;&lt;img alt="Lighting Talks - April 11th 17h30" src="https://i.ytimg.com/vi/JVVMMULwR4s/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=JVVMMULwR4s"&gt;https://www.youtube.com/watch?v=JVVMMULwR4s&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Lighting Talks - April 12th 08h30</title><link href="/pycon-us-2015/pycon-us-2015-lighting-talks-april-12th-08h30.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Unknown</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-lighting-talks-april-12th-08h30.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=ZEE3dlo7ov0"&gt;&lt;img alt="Lighting Talks - April 12th 08h30" src="https://i.ytimg.com/vi/ZEE3dlo7ov0/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=ZEE3dlo7ov0"&gt;https://www.youtube.com/watch?v=ZEE3dlo7ov0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Lightning Talks - April 11th 8h30</title><link href="/pycon-us-2015/pycon-us-2015-lightning-talks-april-11th-8h30.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Unknown</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-lightning-talks-april-11th-8h30.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=byClBydNI1A"&gt;&lt;img alt="Lightning Talks - April 11th 8h30" src="https://i.ytimg.com/vi/byClBydNI1A/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=byClBydNI1A"&gt;https://www.youtube.com/watch?v=byClBydNI1A&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Losing your Loops Fast Numerical Computing with NumPy</title><link href="/pycon-us-2015/pycon-us-2015-losing-your-loops-fast-numerical-computing-with-numpy.html" rel="alternate"></link><updated>2015-04-16T16:41:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-losing-your-loops-fast-numerical-computing-with-numpy.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=EEUXKG97YRw"&gt;&lt;img alt="Losing your Loops Fast Numerical Computing with NumPy" src="https://i.ytimg.com/vi/EEUXKG97YRw/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=EEUXKG97YRw"&gt;https://www.youtube.com/watch?v=EEUXKG97YRw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Machine Learning 101</title><link href="/pycon-us-2015/pycon-us-2015-machine-learning-101.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Kyle Kastner</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-machine-learning-101.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=r-1XJBHot58"&gt;&lt;img alt="Machine Learning 101" src="https://i.ytimg.com/vi/r-1XJBHot58/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Machine learning is a crucial part of modern software development. Libraries like pandas, scikit-learn, gensim, and Theano help developers build projects that were previously impossible, and these applications empower our users and can make fundamental improvements in daily life. This talk will show you the why, what, and how of machine learning in Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=r-1XJBHot58"&gt;https://www.youtube.com/watch?v=r-1XJBHot58&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Machine Learning with Scikit-Learn (I)</title><link href="/pycon-us-2015/pycon-us-2015-machine-learning-with-scikit-learn-i.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-machine-learning-with-scikit-learn-i.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=L7R4HUQ-eQ0"&gt;&lt;img alt="Machine Learning with Scikit-Learn (I)" src="https://i.ytimg.com/vi/L7R4HUQ-eQ0/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This tutorial will offer an introduction to the core concepts of machine learning and the Scikit-Learn package. We will introduce the scikit-learn API, and use it to explore the basic categories of machine learning problems and related topics such as feature selection and model validation, and practice applying these tools to real-world data sets.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=L7R4HUQ-eQ0"&gt;https://www.youtube.com/watch?v=L7R4HUQ-eQ0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Machine Learning with Scikit-Learn (II)</title><link href="/pycon-us-2015/pycon-us-2015-machine-learning-with-scikit-learn-ii.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Olivier Grisel</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-machine-learning-with-scikit-learn-ii.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=oGqGxvqA9-k"&gt;&lt;img alt="Machine Learning with Scikit-Learn (II)" src="https://i.ytimg.com/vi/oGqGxvqA9-k/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This tutorial will offer an overview of common usage and methodological patterns when using Scikit-Learn to build predictive models. In particular we will highlight common strategies to deal with data with heterogeneously typed attributes with pandas dataframes, model evaluation and tuning. Finally if time permits we will explore the specificities of working with textual data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=oGqGxvqA9-k"&gt;https://www.youtube.com/watch?v=oGqGxvqA9-k&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Make web development awesome with visual diffing tools</title><link href="/pycon-us-2015/pycon-us-2015-make-web-development-awesome-with-visual-diffing-tools.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Daniel Vanderkam</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-make-web-development-awesome-with-visual-diffing-tools.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=jUUTqgzNR3M"&gt;&lt;img alt="Make web development awesome with visual diffing tools" src="https://i.ytimg.com/vi/jUUTqgzNR3M/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Visual diffs are a great way to check for regressions on web sites which may be missed by unit tests. In this talk you'll learn how to run end-to-end tests on your client and server web libraries using a tool called dpxdt. I'll also show how you can combine it with web-based diff tools like &amp;quot;&amp;quot;git webdiff&amp;quot;&amp;quot; to quickly and confidently iterate on web tools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=jUUTqgzNR3M"&gt;https://www.youtube.com/watch?v=jUUTqgzNR3M&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Make your own Smart Air Conditioner</title><link href="/pycon-us-2015/pycon-us-2015-make-your-own-smart-air-conditioner.html" rel="alternate"></link><updated>2015-04-16T16:40:00+00:00</updated><author><name>Miriam Lauter</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-make-your-own-smart-air-conditioner.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=MILdMBgxdq8"&gt;&lt;img alt="Make your own Smart Air Conditioner" src="https://i.ytimg.com/vi/MILdMBgxdq8/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=MILdMBgxdq8"&gt;https://www.youtube.com/watch?v=MILdMBgxdq8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Making Beautiful Graphs in Python and Sharing Them</title><link href="/pycon-us-2015/pycon-us-2015-making-beautiful-graphs-in-python-and-sharing-them.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Andrew Seier</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-making-beautiful-graphs-in-python-and-sharing-them.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=9F_kkf7CDQs"&gt;&lt;img alt="Making Beautiful Graphs in Python and Sharing Them" src="https://i.ytimg.com/vi/9F_kkf7CDQs/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;From Python basics to NYT-quality graphics, we walk through workflows to make beautiful, shareable data visualizations. We’ll also explore 3D plotting in the browser, cross-language collaboration, and matplotlib figure conversion. By using Python’s scientific stack and an IPython notebook--attendees may follow along. For data analysts, data journalists, and anyone who likes plots.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=9F_kkf7CDQs"&gt;https://www.youtube.com/watch?v=9F_kkf7CDQs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Managing Your Infrastructure with SaltStack</title><link href="/pycon-us-2015/pycon-us-2015-managing-your-infrastructure-with-saltstack.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Colton Myers</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-managing-your-infrastructure-with-saltstack.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=y-zQUqMHRX4"&gt;&lt;img alt="Managing Your Infrastructure with SaltStack" src="https://i.ytimg.com/vi/y-zQUqMHRX4/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Are you still using SSH to manage your servers? Deploying code manually with rsync? There’s a better way. SaltStack is one of the latest and greatest tools for system management. Once you have a foundation of lightning-fast remote execution, you can build anything on top of it. Plus, it’s written in Python, and easy to extend!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=y-zQUqMHRX4"&gt;https://www.youtube.com/watch?v=y-zQUqMHRX4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Modules and Packages: Live and Let Die!</title><link href="/pycon-us-2015/pycon-us-2015-modules-and-packages-live-and-let-die.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>David Beazley</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-modules-and-packages-live-and-let-die.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=0oTh1CXRaQ0"&gt;&lt;img alt="Modules and Packages: Live and Let Die!" src="https://i.ytimg.com/vi/0oTh1CXRaQ0/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;All Python programmers use the import statement, but do you really know how it works and what it allows?  This tutorial aims to take a deep dive into every diabolical issue related to modules, packages, and imports.   When we're done, you'll finally be ready to unleash your million line micro framework on the world!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=0oTh1CXRaQ0"&gt;https://www.youtube.com/watch?v=0oTh1CXRaQ0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>My Python's a little Rust-y</title><link href="/pycon-us-2015/pycon-us-2015-my-pythons-a-little-rust-y.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Dan Callahan</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-my-pythons-a-little-rust-y.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=3CwJ0MH-4MA"&gt;&lt;img alt="My Python's a little Rust-y" src="https://i.ytimg.com/vi/3CwJ0MH-4MA/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Rust is a new systems programming language from Mozilla that combines strong compile-time correctness guarantees with fast performance... and it plays nice with ctypes! Come learn how you can call Rust functions from Python code and finally say goodbye to hacking C!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=3CwJ0MH-4MA"&gt;https://www.youtube.com/watch?v=3CwJ0MH-4MA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Neural Nets for Newbies</title><link href="/pycon-us-2015/pycon-us-2015-neural-nets-for-newbies.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Melanie Warrick</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-neural-nets-for-newbies.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=g-BJSl4zV_g"&gt;&lt;img alt="Neural Nets for Newbies" src="https://i.ytimg.com/vi/g-BJSl4zV_g/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Neural networks have regained popularity in the last decade, but they get dismissed as being too complicated to understand and implement. This talk breaks down the neural net structure as simply as possible, so you have a framework on which to grow your knowledge in the space. I will put neural nets in the context of real-world applications and share Python packages and code where you can get started building your own. Coming out this talk you won't know everything about neural nets, but you will walk away with a solid foundation and some resources on where to go next to learn more.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=g-BJSl4zV_g"&gt;https://www.youtube.com/watch?v=g-BJSl4zV_g&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Oh, Come On Who Needs Bytearrays</title><link href="/pycon-us-2015/pycon-us-2015-oh-come-on-who-needs-bytearrays.html" rel="alternate"></link><updated>2015-04-16T15:37:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-oh-come-on-who-needs-bytearrays.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=z9Hmys8ojno"&gt;&lt;img alt="Oh, Come On Who Needs Bytearrays" src="https://i.ytimg.com/vi/z9Hmys8ojno/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=z9Hmys8ojno"&gt;https://www.youtube.com/watch?v=z9Hmys8ojno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Open Source for Newcomers and the People Who Want to Welcome Them</title><link href="/pycon-us-2015/pycon-us-2015-open-source-for-newcomers-and-the-people-who-want-to-welcome-them.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Shauna Gordon-McKeon</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-open-source-for-newcomers-and-the-people-who-want-to-welcome-them.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=8P1oxmkvLB4"&gt;&lt;img alt="Open Source for Newcomers and the People Who Want to Welcome Them" src="https://i.ytimg.com/vi/8P1oxmkvLB4/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Open source can be fun and rewarding, but it can also be intimidating.  This talk addresses some of the biggest technical and psychological barriers to contributing, from the perspective of both the newcomers who want to overcome them and the maintainers who want to remove them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=8P1oxmkvLB4"&gt;https://www.youtube.com/watch?v=8P1oxmkvLB4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Opening Statements - Julia Evans</title><link href="/pycon-us-2015/pycon-us-2015-opening-statements-julia-evans.html" rel="alternate"></link><updated>2015-04-16T16:39:00+00:00</updated><author><name>Julia Evans</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-opening-statements-julia-evans.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=N_H6JpkgM8s"&gt;&lt;img alt="Opening Statements - Julia Evans" src="https://i.ytimg.com/vi/N_H6JpkgM8s/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=N_H6JpkgM8s"&gt;https://www.youtube.com/watch?v=N_H6JpkgM8s&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Other people's messy data (and how not to hate it!)</title><link href="/pycon-us-2015/pycon-us-2015-other-peoples-messy-data-and-how-not-to-hate-it.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Mali Akmanalp</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-other-peoples-messy-data-and-how-not-to-hate-it.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=_eQ_8U5kruQ"&gt;&lt;img alt="Other people's messy data (and how not to hate it!)" src="https://i.ytimg.com/vi/_eQ_8U5kruQ/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Have you ever viscerally hated a dataset? Do you want to just get data cleaning out of the way? Are you always left wondering how it consumes most of your time? Whether you work in the sciences, work with government data or scrape websites, data cleaning is a necessary evil. We'll share our woes and check out state of the art in day to day data cleaning tools and strategies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=_eQ_8U5kruQ"&gt;https://www.youtube.com/watch?v=_eQ_8U5kruQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Pandas From The Ground Up</title><link href="/pycon-us-2015/pycon-us-2015-pandas-from-the-ground-up.html" rel="alternate"></link><updated>2015-04-16T15:56:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-pandas-from-the-ground-up.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=5JnMutdy6Fw"&gt;&lt;img alt="Pandas From The Ground Up" src="https://i.ytimg.com/vi/5JnMutdy6Fw/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;The typical Pandas user learns one dataframe method at a time, slowly scraping features together through trial and error until they can solve the task in front of them. In this tutorial you will re-learn how to think about dataframes from the ground up, and discover how to select intelligently from their abilities to solve your data processing problems through direct and deliberately-chosen steps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=5JnMutdy6Fw"&gt;https://www.youtube.com/watch?v=5JnMutdy6Fw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Performance by the Numbers: analyzing the performance of web applications</title><link href="/pycon-us-2015/pycon-us-2015-performance-by-the-numbers-analyzing-the-performance-of-web-applications.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Geoff Gerrietts</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-performance-by-the-numbers-analyzing-the-performance-of-web-applications.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=UAztOuO1ANQ"&gt;&lt;img alt="Performance by the Numbers: analyzing the performance of web applications" src="https://i.ytimg.com/vi/UAztOuO1ANQ/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Everyone knows poor performance when they see it, and performance concerns affect every application -- web applications more than most. But finding performance problems can be extraordinarily difficult, and requires an analytical approach coupled with good instrumentation. This talk explores approaches to instrumentation and what that instrumentation can tell you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=UAztOuO1ANQ"&gt;https://www.youtube.com/watch?v=UAztOuO1ANQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Porting Python to run without an OS</title><link href="/pycon-us-2015/pycon-us-2015-porting-python-to-run-without-an-os.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Josh Triplett</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-porting-python-to-run-without-an-os.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=bYQ_lq5dcvM"&gt;&lt;img alt="Porting Python to run without an OS" src="https://i.ytimg.com/vi/bYQ_lq5dcvM/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;We've ported Python to run directly on hardware, without an OS, as a testing and exploration environment for firmware, ACPI, and UEFI. This talk will explore porting Python to a new platform, embedding Python, recreating enough of libc and POSIX to run Python without an OS, and binding to platform-specific services. Includes live demo of bare-metal Python, directly driving hardware.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=bYQ_lq5dcvM"&gt;https://www.youtube.com/watch?v=bYQ_lq5dcvM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>PostgreSQL Proficiency for Python People</title><link href="/pycon-us-2015/pycon-us-2015-postgresql-proficiency-for-python-people.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Christophe Pettus</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-postgresql-proficiency-for-python-people.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=78A2gJBgL9g"&gt;&lt;img alt="PostgreSQL Proficiency for Python People" src="https://i.ytimg.com/vi/78A2gJBgL9g/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;PostgreSQL has become the default database for most green-field development projects, and is the data storage architecture behind many major Python-based success stories, such as Instagram. Despite a reputation as being complex and fiddly, Postgres is easy to install, administer, maintain, and use... with just a little bit of orientation. This is that orientation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=78A2gJBgL9g"&gt;https://www.youtube.com/watch?v=78A2gJBgL9g&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Practical Graph/Network Analysis Made Simple</title><link href="/pycon-us-2015/pycon-us-2015-practical-graphnetwork-analysis-made-simple.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Eric Ma</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-practical-graphnetwork-analysis-made-simple.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=_k4MOh7J7YY"&gt;&lt;img alt="Practical Graph/Network Analysis Made Simple" src="https://i.ytimg.com/vi/_k4MOh7J7YY/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Have you ever wondered about how those data scientists at Facebook and LinkedIn make friend recommendations? Or how epidemiologists track down patient zero in an outbreak? If so, then this tutorial is for you. Here, we will explore a bike sharing data set as a way to understand the kinds of problems that can be solved using graph analytics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=_k4MOh7J7YY"&gt;https://www.youtube.com/watch?v=_k4MOh7J7YY&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>PyPy.js: What? How? Why?</title><link href="/pycon-us-2015/pycon-us-2015-pypyjs-what-how-why.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Ryan Kelly</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-pypyjs-what-how-why.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=PiBfOFqDIAI"&gt;&lt;img alt="PyPy.js: What? How? Why?" src="https://i.ytimg.com/vi/PiBfOFqDIAI/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;PyPy.js is an experiment in building a fast and compliant in-browser python interpreter, by compiling PyPy into javascript and retargeting its JIT to emit javascript code at runtime. This talk will demonstrate the combination of technologies that make such a thing possible, the results achieved so far, and the challenges that still remain when taking python onto javascript's home turf.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=PiBfOFqDIAI"&gt;https://www.youtube.com/watch?v=PiBfOFqDIAI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Python by Immersion</title><link href="/pycon-us-2015/pycon-us-2015-python-by-immersion.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Stuart Williams</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-python-by-immersion.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=RVNIdoepdzU"&gt;&lt;img alt="Python by Immersion" src="https://i.ytimg.com/vi/RVNIdoepdzU/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;A very fast introduction to Python for software developers with experience in other languages.  Instead of a traditional top-down presentation of Python's features, syntax, and semantics, students are immersed in the language bottom-up with hundreds of small examples using the interactive interpreter to quickly gain familiarity with most of the core language features.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=RVNIdoepdzU"&gt;https://www.youtube.com/watch?v=RVNIdoepdzU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Python Concurrency From the Ground Up: LIVE!</title><link href="/pycon-us-2015/pycon-us-2015-python-concurrency-from-the-ground-up-live.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>David Beazley</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-python-concurrency-from-the-ground-up-live.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=MCs5OvhV9S4"&gt;&lt;img alt="Python Concurrency From the Ground Up: LIVE!" src="https://i.ytimg.com/vi/MCs5OvhV9S4/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;There are currently three popular approaches to Python concurrency: threads, event loops, and coroutines. Each is shrouded by various degrees of mystery and peril.  In this talk, all three approaches will be deconstructed and explained in a epic ground-up live coding battle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=MCs5OvhV9S4"&gt;https://www.youtube.com/watch?v=MCs5OvhV9S4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Python Epiphanies</title><link href="/pycon-us-2015/pycon-us-2015-python-epiphanies.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Stuart Williams</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-python-epiphanies.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=Ug0iDjbMPVg"&gt;&lt;img alt="Python Epiphanies" src="https://i.ytimg.com/vi/Ug0iDjbMPVg/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This tutorial is for developers who've been using Python for a while and would consider themselves at an intermediate level, but are looking for a deeper understanding of the language.  It focuses on how Python differs from other languages in subtle but important ways that are often confusing, and it demystifies a number of language features that are sometimes misunderstood.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=Ug0iDjbMPVg"&gt;https://www.youtube.com/watch?v=Ug0iDjbMPVg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Python Performance Profiling: The Guts And The Glory</title><link href="/pycon-us-2015/pycon-us-2015-python-performance-profiling-the-guts-and-the-glory.html" rel="alternate"></link><updated>2015-04-16T15:58:00+00:00</updated><author><name>"A. Jesse Jiryu Davis"</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-python-performance-profiling-the-guts-and-the-glory.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=4uJWWXYHxaM"&gt;&lt;img alt="Python Performance Profiling: The Guts And The Glory" src="https://i.ytimg.com/vi/4uJWWXYHxaM/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Your Python program is too slow, and you need to optimize it. Where do you start? With the right tools, you can optimize your code where it counts. We’ll explore the guts of the Python profiler “Yappi” to understand its features and limitations. We’ll learn how to find the maximum performance wins with minimum effort.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=4uJWWXYHxaM"&gt;https://www.youtube.com/watch?v=4uJWWXYHxaM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Pythons are Deaf, So are Some Pythonistas</title><link href="/pycon-us-2015/pycon-us-2015-pythons-are-deaf-so-are-some-pythonistas.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>en zyme</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-pythons-are-deaf-so-are-some-pythonistas.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=-LVlzIOxbAE"&gt;&lt;img alt="Pythons are Deaf, So are Some Pythonistas" src="https://i.ytimg.com/vi/-LVlzIOxbAE/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;ASL, like Python, is a language which is both fun and powerful. We have used Python to build a tool, ASL-CLeaR (American Sign Language Concept Learning Resource)  for the DHH community which will teach STEM terminology using ASL exclusively. We are also building a summer program to teach Python in English/ASL to DHH students.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=-LVlzIOxbAE"&gt;https://www.youtube.com/watch?v=-LVlzIOxbAE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Rethinking packaging, development and deployment</title><link href="/pycon-us-2015/pycon-us-2015-rethinking-packaging-development-and-deployment.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Domen Kožar</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-rethinking-packaging-development-and-deployment.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=W8A2bOKPtJU"&gt;&lt;img alt="Rethinking packaging, development and deployment" src="https://i.ytimg.com/vi/W8A2bOKPtJU/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Applying functional programming ideas to solve the problem of packaging software and configuration of systems in a stateless and deterministic way. Nix project addresses those problems in unique way based on academic research that has been applied to real world software collections in last 10 years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=W8A2bOKPtJU"&gt;https://www.youtube.com/watch?v=W8A2bOKPtJU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Robots Robots Ra Ra Ra!!!</title><link href="/pycon-us-2015/pycon-us-2015-robots-robots-ra-ra-ra.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Katherine Scott</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-robots-robots-ra-ra-ra.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=Wf0Uhebn2cM"&gt;&lt;img alt="Robots Robots Ra Ra Ra!!!" src="https://i.ytimg.com/vi/Wf0Uhebn2cM/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Lots of people want to learn more about robotics but are unsure where to start. Turns out there is a python robotics framework, and it runs some of the most sophisticated robots in the world! It is also open source, well-documented, and has a great community. In this talk we will look at Robot Operating System ROS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=Wf0Uhebn2cM"&gt;https://www.youtube.com/watch?v=Wf0Uhebn2cM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Satellite mapping for everyone</title><link href="/pycon-us-2015/pycon-us-2015-satellite-mapping-for-everyone.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Chris Waigl</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-satellite-mapping-for-everyone.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=MCHpt1FvblI"&gt;&lt;img alt="Satellite mapping for everyone" src="https://i.ytimg.com/vi/MCHpt1FvblI/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Concerned about urban sprawl, landscape change or ecosystem recovery? Wildfire, drought or flooding? A vast amount of satellite data, collected since the 1970s, is freely available for your next mapping project. I will demonstrate how Python helps to make sense of odd scientific data and metadata formats and produce beautiful visualization and map products.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=MCHpt1FvblI"&gt;https://www.youtube.com/watch?v=MCHpt1FvblI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Schemas for the Real World</title><link href="/pycon-us-2015/pycon-us-2015-schemas-for-the-real-world.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>"Carina C. Zona"</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-schemas-for-the-real-world.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=PYYfVqtcWQY"&gt;&lt;img alt="Schemas for the Real World" src="https://i.ytimg.com/vi/PYYfVqtcWQY/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Development challenges us to code for users’ personal world. Users give push-back to ill-fitted assumptions about their own name, gender, sexual orientation, important relationships, &amp;amp; other attributes that are individually meaningful. We'll explore how to develop software that brings real world into focus &amp;amp; that allows individuals to authentically reflect their personhood &amp;amp; physical world.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=PYYfVqtcWQY"&gt;https://www.youtube.com/watch?v=PYYfVqtcWQY&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Serialization formats are not toys</title><link href="/pycon-us-2015/pycon-us-2015-serialization-formats-are-not-toys.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Tom Eastman</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-serialization-formats-are-not-toys.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=kjZHjvrAS74"&gt;&lt;img alt="Serialization formats are not toys" src="https://i.ytimg.com/vi/kjZHjvrAS74/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;It’s not in the OWASP Top 10, but you don’t have to look far to hear stories of security vulnerabilities involving deserialization of user input. In this talk I’ll go over what the threat is and how you might be making yourself vulnerable. I’ll cover the features (not bugs: features) of XML, YAML, and JSON that make them surprisingly dangerous, and how to protect your code from them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=kjZHjvrAS74"&gt;https://www.youtube.com/watch?v=kjZHjvrAS74&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Shiny, Let's Be Bad Guys: Exploiting and Mitigating the Top 10 Web App Vulnerabilities</title><link href="/pycon-us-2015/pycon-us-2015-shiny-lets-be-bad-guys-exploiting-and-mitigating-the-top-10-web-app-vulnerabilities.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>David Stanek</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-shiny-lets-be-bad-guys-exploiting-and-mitigating-the-top-10-web-app-vulnerabilities.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=wzQMqPzGcLE"&gt;&lt;img alt="Shiny, Let's Be Bad Guys: Exploiting and Mitigating the Top 10 Web App Vulnerabilities" src="https://i.ytimg.com/vi/wzQMqPzGcLE/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;The Internet is a dangerous place, filled with evildoers out to attack your code for fun or profit, so it's not enough to just ship your awesome new web app--you have to take the security of your application, your users, and your data seriously. You'll get into the mindset of the bad guys as we discuss, exploit, and mitigate the most common web app security flaws in a controlled environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=wzQMqPzGcLE"&gt;https://www.youtube.com/watch?v=wzQMqPzGcLE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Ship it: Deployments with Pip</title><link href="/pycon-us-2015/pycon-us-2015-ship-it-deployments-with-pip.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Dan Tracy</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-ship-it-deployments-with-pip.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=aD2CfKQB5xM"&gt;&lt;img alt="Ship it: Deployments with Pip" src="https://i.ytimg.com/vi/aD2CfKQB5xM/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Gone are the days where creating system packages or scp-ing tar balls were required for deployment.  With Pip, Fabric, and Jenkins we've  developed a pipeline to simplify deployments and rollbacks that dove-tails into configuration management and virtualization.  New machines can come fully deployed and ready to rock at a moments notice allowing you to scale out nodes quickly and painlessly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=aD2CfKQB5xM"&gt;https://www.youtube.com/watch?v=aD2CfKQB5xM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Smart services &amp; smart clients: How micro-services change the way you build and deploy code.</title><link href="/pycon-us-2015/pycon-us-2015-smart-services-smart-clients-how-micro-services-change-the-way-you-build-and-deploy-code.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Frank Stratton</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-smart-services-smart-clients-how-micro-services-change-the-way-you-build-and-deploy-code.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=NYVUn8T-0qA"&gt;&lt;img alt="Smart services &amp;amp; smart clients:  How micro-services change the way you build and deploy code." src="https://i.ytimg.com/vi/NYVUn8T-0qA/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;At Runscope we've standardized the idea of small independent &amp;quot;&amp;quot;smart&amp;quot;&amp;quot; services that can be quickly built, deployed, and scaled. This talk examines lessons learned from writing these services as well as patterns found in other platforms. We present a detailed look at the code that allow us to build dozens of services, serving billions of requests, while deploying to our cluster over 20 times a day.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=NYVUn8T-0qA"&gt;https://www.youtube.com/watch?v=NYVUn8T-0qA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>So you think you can PDB?</title><link href="/pycon-us-2015/pycon-us-2015-so-you-think-you-can-pdb.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Clayton Parker</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-so-you-think-you-can-pdb.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=P0pIW5tJrRM"&gt;&lt;img alt="So you think you can PDB?" src="https://i.ytimg.com/vi/P0pIW5tJrRM/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This talk will be an introduction to the most commonly used Python Debugger commands and what they do. Learn how to navigate and inspect code from the pdb prompt so you can better understand how it works. The Python Debugger is a valuable debugging tool for all levels of Python programmers. You should walk away being able to debug the next Python code you encounter!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=P0pIW5tJrRM"&gt;https://www.youtube.com/watch?v=P0pIW5tJrRM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Statistical inference with computational methods</title><link href="/pycon-us-2015/pycon-us-2015-statistical-inference-with-computational-methods.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Allen Downey</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-statistical-inference-with-computational-methods.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=5Vjrqnk7Igs"&gt;&lt;img alt="Statistical inference with computational methods" src="https://i.ytimg.com/vi/5Vjrqnk7Igs/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Statistical inference is a fundamental tool in science and engineering, but it is often poorly understood. &amp;nbsp;This tutorial uses computational methods, including Monte Carlo simulation and resampling, to explore estimation, hypothesis testing and statistical modeling. &amp;nbsp;Attendees will develop understanding of statistical concepts and learn to use real data to answer relevant questions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=5Vjrqnk7Igs"&gt;https://www.youtube.com/watch?v=5Vjrqnk7Igs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>streamparse: real-time streams with Python and Apache Storm</title><link href="/pycon-us-2015/pycon-us-2015-streamparse-real-time-streams-with-python-and-apache-storm.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Andrew Montalenti</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-streamparse-real-time-streams-with-python-and-apache-storm.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=ja4Qj9-l6WQ"&gt;&lt;img alt="streamparse: real-time streams with Python and Apache Storm" src="https://i.ytimg.com/vi/ja4Qj9-l6WQ/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Real-time streams are everywhere, but does Python have a good way of processing them? Until recently, there were no good options. A new open source project, streamparse, makes working with real-time data streams easy for Pythonistas. If you have ever wondered how to process 10,000 data tuples per second with Python -- while maintaining high availability and low latency -- this talk is for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=ja4Qj9-l6WQ"&gt;https://www.youtube.com/watch?v=ja4Qj9-l6WQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Super considered super!</title><link href="/pycon-us-2015/pycon-us-2015-super-considered-super.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Raymond Hettinger</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-super-considered-super.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=EiOglTERPEo"&gt;&lt;img alt="Super considered super!" src="https://i.ytimg.com/vi/EiOglTERPEo/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Python's super() is well-designed and powerful, but it can be tricky to use if you don't know all the moves.&lt;/p&gt;
&lt;p&gt;This talk offers clear, practical advice with real-world use cases on how to use super() effectively and not get tripped-up by common mistakes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=EiOglTERPEo"&gt;https://www.youtube.com/watch?v=EiOglTERPEo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Systems programming as a swiss army knife</title><link href="/pycon-us-2015/pycon-us-2015-systems-programming-as-a-swiss-army-knife.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Julia Evans</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-systems-programming-as-a-swiss-army-knife.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=5v6o-VsLAew"&gt;&lt;img alt="Systems programming as a swiss army knife" src="https://i.ytimg.com/vi/5v6o-VsLAew/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;You might think of the Linux kernel as something that only kernel developers need to know about. Not so! It turns out that understanding some basics about kernels and systems programming makes you a better developer, and you can use this knowledge when debugging your normal everyday Python programs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=5v6o-VsLAew"&gt;https://www.youtube.com/watch?v=5v6o-VsLAew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>TDD with Django, from scratch: a beginner's intro to testing and web development</title><link href="/pycon-us-2015/pycon-us-2015-tdd-with-django-from-scratch-a-beginners-intro-to-testing-and-web-development.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Harry Percival</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-tdd-with-django-from-scratch-a-beginners-intro-to-testing-and-web-development.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=vQjmz9wCjLA"&gt;&lt;img alt="TDD with Django, from scratch: a beginner's intro to testing and web development" src="https://i.ytimg.com/vi/vQjmz9wCjLA/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;A beginner's introduction to testing and web development with Django. We'll build a simple web app, from scratch, but with full TDD, including functional testing with Selenium and unit testing Django's views, templates, and models. Some familiarity with Python is desirable, but no prior knowledge of Django or testing is assumed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=vQjmz9wCjLA"&gt;https://www.youtube.com/watch?v=vQjmz9wCjLA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Technical Debt</title><link href="/pycon-us-2015/pycon-us-2015-technical-debt.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Nina Zakharenko</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-technical-debt.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=JKYktDRoRxw"&gt;&lt;img alt="Technical Debt" src="https://i.ytimg.com/vi/JKYktDRoRxw/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Technical debt is the code monster hiding in everyone's closet. If you ignore it, it will terrorize you at night. To banish it and re-gain your productivity, you'll need to face it head on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=JKYktDRoRxw"&gt;https://www.youtube.com/watch?v=JKYktDRoRxw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Techniques for Debugging Hard Problems</title><link href="/pycon-us-2015/pycon-us-2015-techniques-for-debugging-hard-problems.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Alex Gaynor</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-techniques-for-debugging-hard-problems.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=ij99SGGEX34"&gt;&lt;img alt="Techniques for Debugging Hard Problems" src="https://i.ytimg.com/vi/ij99SGGEX34/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Sometimes your programs have bugs. Often they're shallow things, simple AttributeErrors or TypeErrors. Sometimes they're large, complex, and nearly impossible to debug. This talk explores techniques for figuring these out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=ij99SGGEX34"&gt;https://www.youtube.com/watch?v=ij99SGGEX34&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Terminal whispering</title><link href="/pycon-us-2015/pycon-us-2015-terminal-whispering.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Thomas Ballinger</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-terminal-whispering.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=WAitSilLDUA"&gt;&lt;img alt="Terminal whispering" src="https://i.ytimg.com/vi/WAitSilLDUA/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Have you ever wanted to add a status bar to your command line program?
Or maybe color the output a bit? Or do you want to write a fullscreen terminal application like ls, top, vim, or emacs? Then you need to speak a bit of terminal! This talk describes how to talk to your terminal from scratch and goes on to show why Python libraries Blessings and Urwid are so awesome.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=WAitSilLDUA"&gt;https://www.youtube.com/watch?v=WAitSilLDUA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>The Ethical Consequences Of Our Collective Activities</title><link href="/pycon-us-2015/pycon-us-2015-the-ethical-consequences-of-our-collective-activities.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Glyph</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-the-ethical-consequences-of-our-collective-activities.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=uSbKjRRbjZs"&gt;&lt;img alt="The Ethical Consequences Of Our Collective Activities" src="https://i.ytimg.com/vi/uSbKjRRbjZs/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;As more of the world is controlled by software, software developers have an increasing obligation to serve that world well.  Yet, we don't yet have a sense of what makes a good ethical standard.  The fast pace, success, and youth (in both historical and demographic terms) of our industry have given us the sense that such a standard might not be required.  This talk will correct that misconception.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=uSbKjRRbjZs"&gt;https://www.youtube.com/watch?v=uSbKjRRbjZs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>The REST Ascendancy</title><link href="/pycon-us-2015/pycon-us-2015-the-rest-ascendancy.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Jeff Schenck</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-the-rest-ascendancy.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=HxP0lQCCiVo"&gt;&lt;img alt="The REST Ascendancy" src="https://i.ytimg.com/vi/HxP0lQCCiVo/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;As frontend web frameworks like AngularJS and Backbone.js take over, is Python on the server destined to be demoted to a basic REST interface? If we embrace our new JavaScript overlords, how do we ensure Python is best positioned for this new world of REST on the server?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=HxP0lQCCiVo"&gt;https://www.youtube.com/watch?v=HxP0lQCCiVo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>The (Slightly) Less Sorry State of SSL</title><link href="/pycon-us-2015/pycon-us-2015-the-slightly-less-sorry-state-of-ssl.html" rel="alternate"></link><updated>2015-04-17T09:46:00+00:00</updated><author><name>Benjamin Peterson</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-the-slightly-less-sorry-state-of-ssl.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=4o-xqqidvKA"&gt;&lt;img alt="The (Slightly) Less Sorry State of SSL" src="https://i.ytimg.com/vi/4o-xqqidvKA/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=4o-xqqidvKA"&gt;https://www.youtube.com/watch?v=4o-xqqidvKA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>To ORM or not to ORM</title><link href="/pycon-us-2015/pycon-us-2015-to-orm-or-not-to-orm.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Christine Spang</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-to-orm-or-not-to-orm.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=Sadng6tR7Q4"&gt;&lt;img alt="To ORM or not to ORM" src="https://i.ytimg.com/vi/Sadng6tR7Q4/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Database ORMs make it really convenient to pythonically query a database, but it's difficult to decide when to use them and when not to---and what the alternatives are. In this talk you'll learn strategies for deciding when and where to use an ORM, when to be cautious, and how to tell that you're doing the right thing, drawn from real-world lessons learned building the Inbox email platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=Sadng6tR7Q4"&gt;https://www.youtube.com/watch?v=Sadng6tR7Q4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Twitter Network Analysis with NetworkX</title><link href="/pycon-us-2015/pycon-us-2015-twitter-network-analysis-with-networkx.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Celia La</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-twitter-network-analysis-with-networkx.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=6Lauxn9oTt4"&gt;&lt;img alt="Twitter Network Analysis with NetworkX" src="https://i.ytimg.com/vi/6Lauxn9oTt4/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Twitter's network is fascinating because of its connectivity: there are hashtags, followers, retweets, and replies. Using the network analysis tool NetworkX, we'll look at how to make sense of these channels. We'll cover the basics of network theory, including types of networks and how measure influence, and we'll apply those measures to our investigation of Twitter's network.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=6Lauxn9oTt4"&gt;https://www.youtube.com/watch?v=6Lauxn9oTt4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Type python, press enter. What happens?</title><link href="/pycon-us-2015/pycon-us-2015-type-python-press-enter-what-happens.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Asheesh Laroia</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-type-python-press-enter-what-happens.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=XVhSjZYwZJo"&gt;&lt;img alt="Type python, press enter. What happens?" src="https://i.ytimg.com/vi/XVhSjZYwZJo/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This talk discusses how the Python interpreter starts, from the perspective of the operating system (OS). Together, we will see the ins &amp;amp; outs of processes: fork(), exec(), stdin, and stdout.&lt;/p&gt;
&lt;p&gt;It focuses on OS concepts and requires no background knowledge, using analogies to Python data structures. (The talk does not discuss Python’s own initialization, such as site.py or global variables.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=XVhSjZYwZJo"&gt;https://www.youtube.com/watch?v=XVhSjZYwZJo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Usability Testing on the Cheap</title><link href="/pycon-us-2015/pycon-us-2015-usability-testing-on-the-cheap.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Katie Cunningham</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-usability-testing-on-the-cheap.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=zZx2l3BTCrg"&gt;&lt;img alt="Usability Testing on the Cheap" src="https://i.ytimg.com/vi/zZx2l3BTCrg/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;While everyone agrees that usability testing should be an important part of your development process, not everyone has enough money laying around to pay for a dedicated team or consultants. In this talk, Katie will review a number of inexpensive options that can help any team deliver a usable product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=zZx2l3BTCrg"&gt;https://www.youtube.com/watch?v=zZx2l3BTCrg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Using Supervisor For Fun And Profit</title><link href="/pycon-us-2015/pycon-us-2015-using-supervisor-for-fun-and-profit.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Chris McDonough</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-using-supervisor-for-fun-and-profit.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=p0iQfT85IvM"&gt;&lt;img alt="Using Supervisor For Fun And Profit" src="https://i.ytimg.com/vi/p0iQfT85IvM/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Supervisor is a popular Python application that lets you control and monitor process state on UNIX-like systems.  This talk describes what it is, and how to use it effectively to make your application deployments better.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=p0iQfT85IvM"&gt;https://www.youtube.com/watch?v=p0iQfT85IvM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>WebSockets from the Wire Up</title><link href="/pycon-us-2015/pycon-us-2015-websockets-from-the-wire-up.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Christine Spang</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-websockets-from-the-wire-up.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=u5QT3luWx7w"&gt;&lt;img alt="WebSockets from the Wire Up" src="https://i.ytimg.com/vi/u5QT3luWx7w/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;HTML5 WebSockets power the real-time web. Come take a deep dive into how they
work, from the big picture down to what goes over the wire, including insight
into the performance benefits of the protocol, via a real-world example of how
WebSockets are implemented client- and server-side in Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=u5QT3luWx7w"&gt;https://www.youtube.com/watch?v=u5QT3luWx7w&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>What can programmers learn from pilots?</title><link href="/pycon-us-2015/pycon-us-2015-what-can-programmers-learn-from-pilots.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Andrew Godwin</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-what-can-programmers-learn-from-pilots.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=we4G_X91e5w"&gt;&lt;img alt="What can programmers learn from pilots?" src="https://i.ytimg.com/vi/we4G_X91e5w/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;What can Python-based software teams learn from aviation? Why should software always fail hard? What's wrong with too many error logs? And why are ops people already like pilots? Learn all this, and about planes, too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=we4G_X91e5w"&gt;https://www.youtube.com/watch?v=we4G_X91e5w&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>What Python can learn from Erlang</title><link href="/pycon-us-2015/pycon-us-2015-what-python-can-learn-from-erlang.html" rel="alternate"></link><updated>2015-04-16T16:32:00+00:00</updated><author><name>Benoit Chesneau</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-what-python-can-learn-from-erlang.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=EmICpC_QmhI"&gt;&lt;img alt="What Python can learn from Erlang" src="https://i.ytimg.com/vi/EmICpC_QmhI/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=EmICpC_QmhI"&gt;https://www.youtube.com/watch?v=EmICpC_QmhI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>What to do when you need crypto</title><link href="/pycon-us-2015/pycon-us-2015-what-to-do-when-you-need-crypto.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Jarret Raim</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-what-to-do-when-you-need-crypto.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=0m2ZUS9OH4k"&gt;&lt;img alt="What to do when you need crypto" src="https://i.ytimg.com/vi/0m2ZUS9OH4k/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;The cryptographic world doesn't lend itself to the typical developer flow of learning while doing. Add that to the massive amount of bad or outdated information on the web and many developers are lost or worse, build insecure systems. This tutorial will introduce developers to modern cryptography with an eye towards practical scenarios around password management, encryption and key management.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=0m2ZUS9OH4k"&gt;https://www.youtube.com/watch?v=0m2ZUS9OH4k&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Where in your RAM is "python san_diego.py"?</title><link href="/pycon-us-2015/pycon-us-2015-where-in-your-ram-is-python-san_diegopy.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Ying Li</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-where-in-your-ram-is-python-san_diegopy.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=tMKXcc2-xO8"&gt;&lt;img alt="Where in your RAM is &amp;quot;python san_diego.py&amp;quot;?" src="https://i.ytimg.com/vi/tMKXcc2-xO8/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Gumshoes, the rogue program &lt;cite&gt;san_diego.py&lt;/cite&gt; is threatening to cause havok!  What is it doing to hide itself?  What kind of things is it doing?  Who might it be communicating with?  RAM is a big place - how can we even find it, much less any of this information? Stay tuned and find out!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=tMKXcc2-xO8"&gt;https://www.youtube.com/watch?v=tMKXcc2-xO8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Winning Machine Learning Competitions With Scikit-Learn</title><link href="/pycon-us-2015/pycon-us-2015-winning-machine-learning-competitions-with-scikit-learn.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Ben Hamner</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-winning-machine-learning-competitions-with-scikit-learn.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=gDbaCIE0mrA"&gt;&lt;img alt="Winning Machine Learning Competitions With Scikit-Learn" src="https://i.ytimg.com/vi/gDbaCIE0mrA/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This tutorial will offer an introduction machine learning and how to apply it to a Kaggle competition. We will cover methodologies that have worked well across a diverse set of problems, and then work on a current Kaggle competition together using iPython notebook and scikit-learn. We will cover concepts including feature extraction, feature selection, model evaluation, and data visualization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=gDbaCIE0mrA"&gt;https://www.youtube.com/watch?v=gDbaCIE0mrA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>"Words, words, words": Reading Shakespeare with Python</title><link href="/pycon-us-2015/pycon-us-2015-words-words-words-reading-shakespeare-with-python.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Adam Palay</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-words-words-words-reading-shakespeare-with-python.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=EoWG0lavg9U"&gt;&lt;img alt="&amp;quot;Words, words, words&amp;quot;: Reading Shakespeare with Python" src="https://i.ytimg.com/vi/EoWG0lavg9U/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This talk will give an introduction to text analysis with Python by asking some questions about Shakespeare and discussing the quantitative methods that will go in to answering them. While we’ll use Shakespeare to illustrate our methodologies, we’ll also discuss how they can be ported over into more 21st century texts, like tweets or New York Times articles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=EoWG0lavg9U"&gt;https://www.youtube.com/watch?v=EoWG0lavg9U&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Your Brain's API: Giving and Getting Technical Help</title><link href="/pycon-us-2015/pycon-us-2015-your-brains-api-giving-and-getting-technical-help.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Sasha Laundy</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-your-brains-api-giving-and-getting-technical-help.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=hY14Er6JX2s"&gt;&lt;img alt="Your Brain's API: Giving and Getting Technical Help" src="https://i.ytimg.com/vi/hY14Er6JX2s/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Software engineers are never done learning since our field is always changing. We are always beginners at some things and experts at others. Along the way from beginner to expert we have to ask a lot of questions, but it can be hard to get help. This talk gives concrete tools to help you ask with confidence, and highlights common expert mistakes that inadvertently make people feel foolish.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=hY14Er6JX2s"&gt;https://www.youtube.com/watch?v=hY14Er6JX2s&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Zen of Quality</title><link href="/pycon-us-2015/pycon-us-2015-zen-of-quality.html" rel="alternate"></link><updated>2015-04-16T14:22:00+00:00</updated><author><name>Mike Howsden</name></author><id>tag:,2015-04-16:pycon-us-2015/pycon-us-2015-zen-of-quality.html</id><summary type="html">&lt;a class="reference external image-reference" href="https://www.youtube.com/watch?v=Q94pNl6jzuk"&gt;&lt;img alt="Zen of Quality" src="https://i.ytimg.com/vi/Q94pNl6jzuk/hqdefault.jpg" style="width: 600px;" /&gt;&lt;/a&gt;
&lt;div class="section" id="description"&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;It is extremely important to PBS that digital viewers have an awesome experience when viewing online videos.  In this talk, we explain how PBS built a system to collect, analyze, and measure who's getting a good experience -- and who's not.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Category: PyCon US 2015&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Direct Link: &lt;a class="reference external" href="https://www.youtube.com/watch?v=Q94pNl6jzuk"&gt;https://www.youtube.com/watch?v=Q94pNl6jzuk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry></feed>